{"version":3,"sources":["webpack:///src/app/tools/scale/scale-routing.module.ts","webpack:///src/constants/scale/fn.ts","webpack:///node_modules/@angular/cdk/fesm2015/layout.js","webpack:///node_modules/@angular/common/fesm2015/http.js","webpack:///node_modules/@angular/material/fesm2015/list.js","webpack:///src/app/tools/scale/scale.component.ts","webpack:///src/app/tools/scale/scale.component.html","webpack:///node_modules/@angular/material/fesm2015/icon.js","webpack:///src/app/tools/scale/scale.module.ts","webpack:///node_modules/@angular/material/fesm2015/snack-bar.js","webpack:///node_modules/@angular/material/fesm2015/radio.js"],"names":["routes","path","component","ScaleRoutingModule","forChild","imports","exports","NToX","num","scale","sum","i","Math","pow","length","Number","stringsToNumbers","toString","split","XToN","console","log","result","value","join","compute","computeScale","subResult","v","floor","push","temp","numbersToStrings","arrs","toLowerCase","charCodeAt","String","fromCharCode","LayoutModule","ɵmod","type","ɵinj","factory","LayoutModule_Factory","t","args","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","_platform","_matchMedia","isBrowser","window","matchMedia","bind","noopMatchMedia","query","WEBKIT","createEmptyStyleRule","ɵfac","MediaMatcher_Factory","ɵprov","token","providedIn","ctorParameters","has","document","createElement","setAttribute","head","appendChild","sheet","insertRule","add","e","error","matches","media","addListener","removeListener","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","next","complete","queries","splitQueries","some","mediaQuery","_registerQuery","mql","observables","map","observable","stateObservable","pipe","breakpointStates","response","breakpoints","forEach","get","queryObservable","observer","handler","run","output","set","BreakpointObserver_Factory","reduce","a1","a2","concat","trim","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","HttpHandler","HttpBackend","HttpHeaders","headers","normalizedNames","lazyUpdate","lazyInit","line","index","indexOf","name","slice","key","maybeSetNormalizedName","Object","keys","values","init","Array","from","clone","op","lcName","copyFrom","update","applyUpdate","other","base","undefined","toDelete","existing","filter","fn","HttpUrlEncodingCodec","standardEncoding","decodeURIComponent","paramParser","rawParams","codec","params","param","eqIdx","decodeKey","decodeValue","val","list","encodeURIComponent","replace","HttpParams","options","updates","cloneFrom","encoder","fromString","fromObject","Error","isArray","res","eKey","encodeKey","encodeValue","idx","splice","mightHaveBody","method","isArrayBuffer","ArrayBuffer","isBlob","Blob","isFormData","FormData","HttpRequest","url","third","fourth","body","reportProgress","withCredentials","responseType","toUpperCase","urlWithParams","qIdx","sep","JSON","stringify","setHeaders","setParams","HttpEventType","HttpResponseBase","defaultStatus","defaultStatusText","status","statusText","ok","HttpHeaderResponse","ResponseHeader","HttpResponse","Response","HttpErrorResponse","message","addBody","observe","HttpClient","first","req","events$","handle","res$","event","request","callbackParam","append","HttpClient_Factory","HttpInterceptorHandler","interceptor","intercept","HTTP_INTERCEPTORS","NoopInterceptor","NoopInterceptor_Factory","nextRequestId","JSONP_ERR_NO_CALLBACK","JSONP_ERR_WRONG_METHOD","JSONP_ERR_WRONG_RESPONSE_TYPE","JsonpCallbackContext","JsonpClientBackend","callbackMap","callback","nextCallback","node","src","finished","cancelled","data","cleanup","parentNode","removeChild","onLoad","onError","addEventListener","Sent","removeEventListener","JsonpClientBackend_Factory","decorators","JsonpInterceptor","jsonp","JsonpInterceptor_Factory","XSSI_PREFIX","getResponseUrl","xhr","responseURL","test","getAllResponseHeaders","getResponseHeader","XhrFactory","BrowserXhr","XMLHttpRequest","BrowserXhr_Factory","HttpXhrBackend","xhrFactory","build","open","setRequestHeader","detectedType","detectContentTypeHeader","reqBody","serializeBody","headerResponse","partialFromXhr","responseText","originalBody","parse","text","sentHeaders","onDownProgress","progressEvent","DownloadProgress","loaded","lengthComputable","total","partialText","onUpProgress","progress","UploadProgress","upload","send","readyState","DONE","abort","HttpXhrBackend_Factory","XSRF_COOKIE_NAME","XSRF_HEADER_NAME","HttpXsrfTokenExtractor","HttpXsrfCookieExtractor","doc","platform","cookieName","lastCookieString","lastToken","parseCount","cookieString","cookie","HttpXsrfCookieExtractor_Factory","HttpXsrfInterceptor","tokenService","headerName","lcUrl","startsWith","getToken","HttpXsrfInterceptor_Factory","HttpInterceptingHandler","backend","injector","chain","interceptors","reduceRight","HttpInterceptingHandler_Factory","interceptingHandler","jsonpCallbackContext","HttpClientXsrfModule","ngModule","providers","provide","useClass","useValue","HttpClientXsrfModule_Factory","useExisting","multi","HttpClientModule","HttpClientModule_Factory","withOptions","ngJitMode","HttpClientJsonpModule","HttpClientJsonpModule_Factory","useFactory","_c0","_c1","_c2","_c3","_c4","MatListOption_mat_pseudo_checkbox_2_Template","rf","ctx","ctx_r0","selected","disabled","_c5","_c6","MatListBase","_MatListMixinBase","MatListItemBase","_MatListItemMixinBase","MAT_LIST","MAT_NAV_LIST","MatNavList","arguments","_stateChanges","MatNavList_Factory","ɵMatNavList_BaseFactory","ɵcmp","selectors","hostAttrs","inputs","disableRipple","exportAs","features","ngContentSelectors","decls","vars","template","MatNavList_Template","styles","encapsulation","changeDetection","selector","host","None","OnPush","MatList","_elementRef","_getListType","nativeElement","classList","nodeName","MatList_Factory","MatList_Template","MatListAvatarCssMatStyler","MatListAvatarCssMatStyler_Factory","ɵdir","MatListIconCssMatStyler","MatListIconCssMatStyler_Factory","MatListSubheaderCssMatStyler","MatListSubheaderCssMatStyler_Factory","MatListItem","_element","_changeDetectorRef","navList","_isInteractiveList","_destroyed","_disabled","_list","element","_getHostElement","hasAttribute","subscribe","markForCheck","_lines","MatListItem_Factory","contentQueries","MatListItem_ContentQueries","dirIndex","_t","_avatar","_icon","hostVars","hostBindings","MatListItem_HostBindings","consts","MatListItem_Template","_isRippleDisabled","directives","propDecorators","descendants","MatSelectionListBase","_MatSelectionListMixinBase","MatListOptionBase","_MatListOptionMixinBase","MAT_SELECTION_LIST_VALUE_ACCESSOR","MatSelectionList","MatSelectionListChange","source","option","MatListOption","_changeDetector","selectionList","_selected","_hasFocus","checkboxPosition","_inputsInitialized","_value","compareWith","_setSelected","wasSelected","Promise","resolve","then","hadFocus","newActiveItem","_removeOptionFromList","focus","_text","textContent","multiple","toggle","_emitChangeEvent","_setFocusedOption","_onTouched","selectedOptions","select","deselect","_color","color","newValue","isSelected","_reportValueChange","MatListOption_Factory","MatListOption_ContentQueries","viewQuery","MatListOption_Query","MatListOption_HostBindings","MatListOption_focus_HostBindingHandler","_handleFocus","MatListOption_blur_HostBindingHandler","_handleBlur","MatListOption_click_HostBindingHandler","_handleClick","MatListOption_Template","tabIndex","_focusMonitor","_multiple","_contentInitialized","selectionChange","_tabIndex","_onChange","_","_a","_keyManager","withWrap","withTypeAhead","withHomeAndEnd","skipPredicate","withAllowedModifierKeys","_setOptionsFromValues","tabOut","_allowFocusEscape","changes","_updateTabIndex","changed","added","item","removed","monitor","origin","activeIndex","activeItemIndex","setFirstItemActive","setActiveItem","disableRippleChanges","colorChanges","firstChange","_markOptionsForCheck","stopMonitoring","_isDestroyed","_setAllOptionsSelected","updateActiveItem","optionIndex","_getOptionIndex","min","activeItem","keyCode","manager","previousFocusIndex","hasModifier","isTyping","_toggleFocusedOption","preventDefault","shouldSelect","onKeydown","shiftKey","_getSelectedOptionValues","emit","isDisabled","correspondingOption","find","focusedIndex","_isValidIndex","focusedOption","toArray","skipDisabled","isUserInput","changedOptions","_markForCheck","setTimeout","ngDevMode","MatSelectionList_Factory","MatSelectionList_ContentQueries","MatSelectionList_HostBindings","MatSelectionList_keydown_HostBindingHandler","$event","_keydown","outputs","MatSelectionList_Template","MatListModule","MatListModule_Factory","declarations","ScaleComponent","fb","snackBar","formData","group","number","isComputed","controls","valueChanges","validate","transfer","transNum","transScale","duration","re2","re8","rex","re0x","match","X","onSubmit","templateUrl","styleUrls","getMatIconNameNotFoundError","iconName","getMatIconNoHttpProviderError","getMatIconFailedToSanitizeUrlError","getMatIconFailedToSanitizeLiteralError","literal","SvgIconConfig","svgText","MatIconRegistry","_httpClient","_sanitizer","_errorHandler","_svgIconConfigs","_iconSetConfigs","_cachedIconsByUrl","_inProgressUrlFetches","_fontCssClassesByAlias","_defaultFontSetClass","_document","addSvgIconInNamespace","addSvgIconLiteralInNamespace","namespace","_addSvgIconConfig","cleanLiteral","sanitize","HTML","addSvgIconSetInNamespace","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","alias","className","safeUrl","RESOURCE_URL","cachedIcon","cloneSvg","_loadSvgIconFromConfig","svg","iconKey","config","_getSvgFromConfig","iconSetConfigs","_getSvgFromIconSetConfigs","clear","_svgElementFromConfig","namedIcon","_extractIconWithNameFromAnySet","iconSetFetchRequests","iconSetConfig","_loadSvgIconSetFromConfig","err","errorMessage","handleError","foundIcon","_extractSvgIconFromSet","_fetchIcon","iconSet","iconSource","querySelector","iconElement","cloneNode","removeAttribute","_setSvgAttributes","_toSvgElement","_svgElementFromString","str","div","innerHTML","attributes","childNodes","nodeType","ELEMENT_NODE","viewBox","iconConfig","inProgressFetch","configNamespace","svgElement","MatIconRegistry_Factory","ICON_REGISTRY_PROVIDER_FACTORY","parentRegistry","httpClient","sanitizer","errorHandler","ICON_REGISTRY_PROVIDER","deps","MatIconBase","_MatIconMixinBase","MAT_ICON_LOCATION","MAT_ICON_LOCATION_FACTORY","_location","location","getPathname","pathname","search","funcIriAttributes","ɵ0","attr","funcIriAttributeSelector","funcIriPattern","MatIcon","elementRef","_iconRegistry","ariaHidden","_inline","_currentIconFetch","EMPTY","parts","svgIconChanges","_svgNamespace","_svgName","unsubscribe","svgIcon","_splitIconName","getNamedSvgIcon","_setSvgElement","previousValue","_clearSvgElement","_usingFontIcon","_updateFontIconClasses","cachedElements","_elementsWithExternalReferences","size","newPath","_previousPath","_prependPathToReferences","styleTags","querySelectorAll","_cacheChildrenWithExternalReferences","layoutElement","childCount","child","elem","fontSetClass","fontSet","classNameForFontAlias","getDefaultFontSetClass","_previousFontSetClass","remove","fontIcon","_previousFontIconClass","elements","attrs","elementsWithFuncIri","elementWithReference","getAttribute","inline","_fontSet","_cleanupFontValue","_fontIcon","MatIcon_Factory","MatIcon_HostBindings","MatIcon_Template","MatIconModule","MatIconModule_Factory","ScaleModule","SimpleSnackBar_div_2_Template","_r2","SimpleSnackBar_div_2_Template_button_click_1_listener","ctx_r1","action","MatSnackBarContainer_ng_template_0_Template","MAT_SNACK_BAR_DATA","MatSnackBarConfig","politeness","announcementMessage","horizontalPosition","verticalPosition","MAX_TIMEOUT","MatSnackBarRef","containerInstance","_overlayRef","_afterDismissed","_afterOpened","_onAction","_dismissedByAction","onAction","dismiss","_onExit","_finishDismiss","closed","exit","clearTimeout","_durationTimeoutId","dismissWithAction","dispose","dismissedByAction","_onEnter","SimpleSnackBar","snackBarRef","SimpleSnackBar_Factory","SimpleSnackBar_Template","hasAction","matSnackBarAnimations","snackBarState","transform","opacity","MatSnackBarContainer","_ngZone","snackBarConfig","_animationState","attachDomPortal","portal","_assertNotAttached","_applySnackBarClasses","_portalOutlet","_role","attachComponentPortal","attachTemplatePortal","fromState","toState","_completeExit","onEnter","detectChanges","onMicrotaskEmpty","panelClasses","panelClass","cssClass","hasAttached","MatSnackBarContainer_Factory","MatSnackBarContainer_Query","MatSnackBarContainer_HostBindings","MatSnackBarContainer_animation_state_done_HostBindingHandler","onAnimationEnd","MatSnackBarContainer_Template","animation","Default","animations","MatSnackBarModule","MatSnackBarModule_Factory","entryComponents","MAT_SNACK_BAR_DEFAULT_OPTIONS","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MatSnackBar","_overlay","_live","_injector","_breakpointObserver","_parentSnackBar","_defaultConfig","_snackBarRefAtThisLevel","simpleSnackBarComponent","snackBarContainerComponent","handsetCssClass","_attach","_config","assign","openFromComponent","_openedSnackBarRef","overlayRef","userInjector","viewContainerRef","create","parent","containerPortal","containerRef","attach","instance","content","userConfig","_createOverlay","container","_attachSnackBarContainer","$implicit","_createInjector","contentRef","detachments","state","overlayElement","_animateSnackBar","afterDismissed","enter","afterOpened","_dismissAfter","announce","overlayConfig","direction","positionStrategy","position","global","isRtl","isLeft","isRight","left","right","centerHorizontally","top","bottom","MatSnackBar_Factory","enterDuration","MAT_RADIO_DEFAULT_OPTIONS","MAT_RADIO_DEFAULT_OPTIONS_FACTORY","nextUniqueId","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","MatRadioGroup","MatRadioChange","MAT_RADIO_GROUP","_MatRadioGroupBase","_name","_isInitialized","_labelPosition","_required","_controlValueAccessorChangeFn","onTouched","change","checked","_radios","radio","isAlreadySelected","_updateRadioButtonNames","_markRadiosForCheck","_updateSelectedRadioFromValue","_checkSelectedRadioButton","_MatRadioGroupBase_Factory","labelPosition","required","MatRadioGroup_Factory","ɵMatRadioGroup_BaseFactory","MatRadioGroup_ContentQueries","MatRadioButton","MatRadioButtonBase","_MatRadioButtonMixinBase","_MatRadioButtonBase","radioGroup","_radioDispatcher","_animationMode","_providerOverride","_uniqueId","id","_checked","_removeUniqueSelectionListener","listen","focusVia","_inputElement","focusOrigin","_touch","stopPropagation","groupValueChanged","newCheckedState","notify","_setDisabled","_MatRadioButtonBase_Factory","_MatRadioButtonBase_Query","ariaLabel","ariaLabelledby","ariaDescribedby","changeDetector","focusMonitor","radioDispatcher","animationMode","providerOverride","MatRadioButton_Factory","MatRadioButton_HostBindings","MatRadioButton_focus_HostBindingHandler","MatRadioButton_Template","MatRadioButton_Template_input_change_5_listener","_onInputChange","MatRadioButton_Template_input_click_5_listener","_onInputClick","_r0","inputId","MatRadioModule","MatRadioModule_Factory"],"mappings":"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","file":"tools-scale-scale-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {ScaleComponent} from './scale.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ScaleComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ScaleRoutingModule { }\r\n","// 任意进制转换为10进制\r\nexport function NToX(num, scale): Array<number> {\r\n  let sum = 0;\r\n  // tslint:disable-next-line:forin\r\n  for (const i in num) {\r\n    sum += num[i] * Math.pow(scale, num.length - 1 - Number(i));\r\n  }\r\n  return stringsToNumbers(sum.toString().split(''));\r\n}\r\n// 十进制转换为任意进制\r\nexport function XToN(num: Array<number>): Array<string> {\r\n  console.log(num);\r\n  const result = [];\r\n  const value = Number(num.join(''));\r\n  console.log(value);\r\n  function compute(computeScale) {\r\n    const subResult = [];\r\n    let v = value;\r\n    while (Math.floor(v / computeScale)) {\r\n      subResult.push(v % computeScale);\r\n      v = Math.floor(v / computeScale);\r\n    }\r\n    subResult.push(v % computeScale);\r\n    // reverse\r\n    for (const i in subResult) {\r\n      if ((Number(i) + 1) <= (subResult.length / 2)) {\r\n        const temp = subResult[subResult.length - 1 - Number(i)];\r\n        subResult[subResult.length - 1 - Number(i)] = subResult[i];\r\n        subResult[i] = temp;\r\n      }\r\n    }\r\n    return numbersToStrings(subResult).join('');\r\n  }\r\n  result.push(compute(2));\r\n  result.push(compute(8));\r\n  result.push(num.join(''));\r\n  result.push(compute(16));\r\n  console.log(result);\r\n  return result;\r\n}\r\nexport function stringsToNumbers(arrs) {\r\n  // tslint:disable-next-line:forin\r\n  for (const i in arrs) {\r\n    arrs[i] = arrs[i].toLowerCase();\r\n    if (arrs[i].charCodeAt(0) > 58) {\r\n      arrs[i] = arrs[i].charCodeAt(0) - 87;\r\n    } else {\r\n      arrs[i] = arrs[i].charCodeAt(0) - 48;\r\n    }\r\n  }\r\n  return arrs;\r\n}\r\nfunction numbersToStrings(arrs) {\r\n  for (const i in arrs) {\r\n    if (arrs[i] > 9) {\r\n      arrs[i] = String.fromCharCode(arrs[i] + 87);\r\n    } else {\r\n      arrs[i] = Number(arrs[i]);\r\n    }\r\n  }\r\n  return arrs;\r\n}\r\n","import { NgModule, ɵɵdefineInjectable, ɵɵinject, Injectable, NgZone } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { Platform } from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nclass LayoutModule {\n}\nLayoutModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: LayoutModule });\nLayoutModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function LayoutModule_Factory(t) { return new (t || LayoutModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(LayoutModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n            // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n            // call it from a different scope.\n            window.matchMedia.bind(window) :\n            noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = function MediaMatcher_Factory(t) { return new (t || MediaMatcher)(ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\nMediaMatcher.ɵprov = ɵɵdefineInjectable({ factory: function MediaMatcher_Factory() { return new MediaMatcher(ɵɵinject(Platform)); }, token: MediaMatcher, providedIn: \"root\" });\nMediaMatcher.ctorParameters = () => [\n    { type: Platform }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MediaMatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }]; }, null); })();\n/**\n * For Webkit engines that only trigger the MediaQueryListListener when\n * there is at least one CSS selector for the respective media query.\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet\n                .insertRule(`@media ${query} {.fx-query-test{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = function BreakpointObserver_Factory(t) { return new (t || BreakpointObserver)(ɵngcc0.ɵɵinject(MediaMatcher), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nBreakpointObserver.ɵprov = ɵɵdefineInjectable({ factory: function BreakpointObserver_Factory() { return new BreakpointObserver(ɵɵinject(MediaMatcher), ɵɵinject(NgZone)); }, token: BreakpointObserver, providedIn: \"root\" });\nBreakpointObserver.ctorParameters = () => [\n    { type: MediaMatcher },\n    { type: NgZone }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BreakpointObserver, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: MediaMatcher }, { type: ɵngcc0.NgZone }]; }, null); })();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries.map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.99px)',\n    Small: '(min-width: 600px) and (max-width: 959.99px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.99px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.99px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.99px) and (orientation: portrait), ' +\n        '(max-width: 959.99px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.99px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.99px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.99px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.99px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n\n//# sourceMappingURL=layout.js.map","/**\n * @license Angular v10.2.0\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Injectable, InjectionToken, Inject, PLATFORM_ID, Injector, NgModule } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { DOCUMENT, ɵparseCookieValue } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * @publicApi\n */\nimport * as ɵngcc0 from '@angular/core';\nclass HttpHandler {\n}\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * @publicApi\n */\nclass HttpBackend {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents the header configuration options for an HTTP request.\n * Instances are immutable. Modifying methods return a cloned\n * instance with the change. The original object is never changed.\n *\n * @publicApi\n */\nclass HttpHeaders {\n    /**  Constructs a new HTTP header object with the given values.*/\n    constructor(headers) {\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = () => {\n                this.headers = new Map();\n                headers.split('\\n').forEach(line => {\n                    const index = line.indexOf(':');\n                    if (index > 0) {\n                        const name = line.slice(0, index);\n                        const key = name.toLowerCase();\n                        const value = line.slice(index + 1).trim();\n                        this.maybeSetNormalizedName(name, key);\n                        if (this.headers.has(key)) {\n                            this.headers.get(key).push(value);\n                        }\n                        else {\n                            this.headers.set(key, [value]);\n                        }\n                    }\n                });\n            };\n        }\n        else {\n            this.lazyInit = () => {\n                this.headers = new Map();\n                Object.keys(headers).forEach(name => {\n                    let values = headers[name];\n                    const key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        this.headers.set(key, values);\n                        this.maybeSetNormalizedName(name, key);\n                    }\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of a given header.\n     *\n     * @param name The header name to check for existence.\n     *\n     * @returns True if the header exists, false otherwise.\n     */\n    has(name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    }\n    /**\n     * Retrieves the first value of a given header.\n     *\n     * @param name The header name.\n     *\n     * @returns The value string if the header exists, null otherwise\n     */\n    get(name) {\n        this.init();\n        const values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    }\n    /**\n     * Retrieves the names of the headers.\n     *\n     * @returns A list of header names.\n     */\n    keys() {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    }\n    /**\n     * Retrieves a list of values for a given header.\n     *\n     * @param name The header name from which to retrieve values.\n     *\n     * @returns A string of values if the header exists, null otherwise.\n     */\n    getAll(name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    }\n    /**\n     * Appends a new value to the existing set of values for a header\n     * and returns them in a clone of the original instance.\n     *\n     * @param name The header name for which to append the values.\n     * @param value The value to append.\n     *\n     * @returns A clone of the HTTP headers object with the value appended to the given header.\n     */\n    append(name, value) {\n        return this.clone({ name, value, op: 'a' });\n    }\n    /**\n     * Sets or modifies a value for a given header in a clone of the original instance.\n     * If the header already exists, its value is replaced with the given value\n     * in the returned object.\n     *\n     * @param name The header name.\n     * @param value The value or values to set or overide for the given header.\n     *\n     * @returns A clone of the HTTP headers object with the newly set header value.\n     */\n    set(name, value) {\n        return this.clone({ name, value, op: 's' });\n    }\n    /**\n     * Deletes values for a given header in a clone of the original instance.\n     *\n     * @param name The header name.\n     * @param value The value or values to delete for the given header.\n     *\n     * @returns A clone of the HTTP headers object with the given value deleted.\n     */\n    delete(name, value) {\n        return this.clone({ name, value, op: 'd' });\n    }\n    maybeSetNormalizedName(name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    }\n    init() {\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach(update => this.applyUpdate(update));\n                this.lazyUpdate = null;\n            }\n        }\n    }\n    copyFrom(other) {\n        other.init();\n        Array.from(other.headers.keys()).forEach(key => {\n            this.headers.set(key, other.headers.get(key));\n            this.normalizedNames.set(key, other.normalizedNames.get(key));\n        });\n    }\n    clone(update) {\n        const clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    }\n    applyUpdate(update) {\n        const key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                let value = update.value;\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push(...value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                const toDelete = update.value;\n                if (!toDelete) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    let existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter(value => toDelete.indexOf(value) === -1);\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    }\n    /**\n     * @internal\n     */\n    forEach(fn) {\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach(key => fn(this.normalizedNames.get(key), this.headers.get(key)));\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides encoding and decoding of URL parameter and query-string values.\n *\n * Serializes and parses URL parameter keys and values to encode and decode them.\n * If you pass URL query parameters without encoding,\n * the query parameters can be misinterpreted at the receiving end.\n *\n *\n * @publicApi\n */\nclass HttpUrlEncodingCodec {\n    /**\n     * Encodes a key name for a URL parameter or query-string.\n     * @param key The key name.\n     * @returns The encoded key name.\n     */\n    encodeKey(key) {\n        return standardEncoding(key);\n    }\n    /**\n     * Encodes the value of a URL parameter or query-string.\n     * @param value The value.\n     * @returns The encoded value.\n     */\n    encodeValue(value) {\n        return standardEncoding(value);\n    }\n    /**\n     * Decodes an encoded URL parameter or query-string key.\n     * @param key The encoded key name.\n     * @returns The decoded key name.\n     */\n    decodeKey(key) {\n        return decodeURIComponent(key);\n    }\n    /**\n     * Decodes an encoded URL parameter or query-string value.\n     * @param value The encoded value.\n     * @returns The decoded value.\n     */\n    decodeValue(value) {\n        return decodeURIComponent(value);\n    }\n}\nfunction paramParser(rawParams, codec) {\n    const map = new Map();\n    if (rawParams.length > 0) {\n        const params = rawParams.split('&');\n        params.forEach((param) => {\n            const eqIdx = param.indexOf('=');\n            const [key, val] = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];\n            const list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        });\n    }\n    return map;\n}\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable; all mutation operations return a new instance.\n *\n * @publicApi\n */\nclass HttpParams {\n    constructor(options = {}) {\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        if (!!options.fromString) {\n            if (!!options.fromObject) {\n                throw new Error(`Cannot specify both fromString and fromObject.`);\n            }\n            this.map = paramParser(options.fromString, this.encoder);\n        }\n        else if (!!options.fromObject) {\n            this.map = new Map();\n            Object.keys(options.fromObject).forEach(key => {\n                const value = options.fromObject[key];\n                this.map.set(key, Array.isArray(value) ? value : [value]);\n            });\n        }\n        else {\n            this.map = null;\n        }\n    }\n    /**\n     * Reports whether the body includes one or more values for a given parameter.\n     * @param param The parameter name.\n     * @returns True if the parameter has one or more values,\n     * false if it has no value or is not present.\n     */\n    has(param) {\n        this.init();\n        return this.map.has(param);\n    }\n    /**\n     * Retrieves the first value for a parameter.\n     * @param param The parameter name.\n     * @returns The first value of the given parameter,\n     * or `null` if the parameter is not present.\n     */\n    get(param) {\n        this.init();\n        const res = this.map.get(param);\n        return !!res ? res[0] : null;\n    }\n    /**\n     * Retrieves all values for a  parameter.\n     * @param param The parameter name.\n     * @returns All values in a string array,\n     * or `null` if the parameter not present.\n     */\n    getAll(param) {\n        this.init();\n        return this.map.get(param) || null;\n    }\n    /**\n     * Retrieves all the parameters for this body.\n     * @returns The parameter names in a string array.\n     */\n    keys() {\n        this.init();\n        return Array.from(this.map.keys());\n    }\n    /**\n     * Appends a new value to existing values for a parameter.\n     * @param param The parameter name.\n     * @param value The new value to add.\n     * @return A new body with the appended value.\n     */\n    append(param, value) {\n        return this.clone({ param, value, op: 'a' });\n    }\n    /**\n     * Replaces the value for a parameter.\n     * @param param The parameter name.\n     * @param value The new value.\n     * @return A new body with the new value.\n     */\n    set(param, value) {\n        return this.clone({ param, value, op: 's' });\n    }\n    /**\n     * Removes a given value or all values from a parameter.\n     * @param param The parameter name.\n     * @param value The value to remove, if provided.\n     * @return A new body with the given value removed, or with all values\n     * removed if no value is specified.\n     */\n    delete(param, value) {\n        return this.clone({ param, value, op: 'd' });\n    }\n    /**\n     * Serializes the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     */\n    toString() {\n        this.init();\n        return this.keys()\n            .map(key => {\n            const eKey = this.encoder.encodeKey(key);\n            // `a: ['1']` produces `'a=1'`\n            // `b: []` produces `''`\n            // `c: ['1', '2']` produces `'c=1&c=2'`\n            return this.map.get(key).map(value => eKey + '=' + this.encoder.encodeValue(value))\n                .join('&');\n        })\n            // filter out empty values because `b: []` produces `''`\n            // which results in `a=1&&c=1&c=2` instead of `a=1&c=1&c=2` if we don't\n            .filter(param => param !== '')\n            .join('&');\n    }\n    clone(update) {\n        const clone = new HttpParams({ encoder: this.encoder });\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    }\n    init() {\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach(key => this.map.set(key, this.cloneFrom.map.get(key)));\n            this.updates.forEach(update => {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        const base = (update.op === 'a' ? this.map.get(update.param) : undefined) || [];\n                        base.push(update.value);\n                        this.map.set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            let base = this.map.get(update.param) || [];\n                            const idx = base.indexOf(update.value);\n                            if (idx !== -1) {\n                                base.splice(idx, 1);\n                            }\n                            if (base.length > 0) {\n                                this.map.set(update.param, base);\n                            }\n                            else {\n                                this.map.delete(update.param);\n                            }\n                        }\n                        else {\n                            this.map.delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = this.updates = null;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine whether the given HTTP method may include a body.\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * @publicApi\n */\nclass HttpRequest {\n    constructor(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        let options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = (third !== undefined) ? third : null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = third;\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            const params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                const qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                const sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     */\n    serializeBody() {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return this.body.toString();\n    }\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     */\n    detectContentTypeHeader() {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    }\n    clone(update = {}) {\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        const method = update.method || this.method;\n        const url = update.url || this.url;\n        const responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        const body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        const withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        const reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        let headers = update.headers || this.headers;\n        let params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce((headers, name) => headers.set(name, update.setHeaders[name]), headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce((params, param) => params.set(param, update.setParams[param]), params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params,\n            headers,\n            reportProgress,\n            responseType,\n            withCredentials,\n        });\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Type enumeration for the different kinds of `HttpEvent`.\n *\n * @publicApi\n */\nvar HttpEventType;\n(function (HttpEventType) {\n    /**\n     * The request was sent out over the wire.\n     */\n    HttpEventType[HttpEventType[\"Sent\"] = 0] = \"Sent\";\n    /**\n     * An upload progress event was received.\n     */\n    HttpEventType[HttpEventType[\"UploadProgress\"] = 1] = \"UploadProgress\";\n    /**\n     * The response status code and headers were received.\n     */\n    HttpEventType[HttpEventType[\"ResponseHeader\"] = 2] = \"ResponseHeader\";\n    /**\n     * A download progress event was received.\n     */\n    HttpEventType[HttpEventType[\"DownloadProgress\"] = 3] = \"DownloadProgress\";\n    /**\n     * The full response including the body was received.\n     */\n    HttpEventType[HttpEventType[\"Response\"] = 4] = \"Response\";\n    /**\n     * A custom event from an interceptor or a backend.\n     */\n    HttpEventType[HttpEventType[\"User\"] = 5] = \"User\";\n})(HttpEventType || (HttpEventType = {}));\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * @publicApi\n */\nclass HttpResponseBase {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     */\n    constructor(init, defaultStatus = 200, defaultStatusText = 'OK') {\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n}\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * @publicApi\n */\nclass HttpHeaderResponse extends HttpResponseBase {\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.ResponseHeader;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     */\n    clone(update = {}) {\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * @publicApi\n */\nclass HttpResponse extends HttpResponseBase {\n    /**\n     * Construct a new `HttpResponse`.\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.Response;\n        this.body = init.body !== undefined ? init.body : null;\n    }\n    clone(update = {}) {\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * @publicApi\n */\nclass HttpErrorResponse extends HttpResponseBase {\n    constructor(init) {\n        // Initialize with a default status of 0 / Unknown Error.\n        super(init, 0, 'Unknown Error');\n        this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (this.status >= 200 && this.status < 300) {\n            this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;\n        }\n        else {\n            this.message = `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;\n        }\n        this.error = init.error || null;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. This function clones the object and adds the body.\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n *\n */\nfunction addBody(options, body) {\n    return {\n        body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Performs HTTP requests.\n * This service is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies based on\n * the signature that is called (mainly the values of `observe` and `responseType`).\n *\n * Note that the `responseType` *options* value is a String that identifies the\n * single data type of the response.\n * A single overload version of the method handles each response type.\n * The value of `responseType` cannot be a union, as the combined signature could imply.\n\n *\n * @usageNotes\n * Sample HTTP requests for the [Tour of Heroes](/tutorial/toh-pt0) application.\n *\n * ### HTTP Request Example\n *\n * ```\n *  // GET heroes whose name contains search term\n * searchHeroes(term: string): observable<Hero[]>{\n *\n *  const params = new HttpParams({fromString: 'name=term'});\n *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n * }\n * ```\n * ### JSONP Example\n * ```\n * requestJsonp(url, callback = 'callback') {\n *  return this.httpClient.jsonp(this.heroesURL, callback);\n * }\n * ```\n *\n * ### PATCH Example\n * ```\n * // PATCH one of the heroes' name\n * patchHero (id: number, heroName: string): Observable<{}> {\n * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n *  return this.httpClient.patch(url, {name: heroName}, httpOptions)\n *    .pipe(catchError(this.handleError('patchHero')));\n * }\n * ```\n *\n * @see [HTTP Guide](guide/http)\n *\n * @publicApi\n */\nclass HttpClient {\n    constructor(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an observable for a generic HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * You can pass an `HttpRequest` directly as the only parameter. In this case,\n     * the call returns an observable of the raw `HttpEvent` stream.\n     *\n     * Alternatively you can pass an HTTP method as the first parameter,\n     * a URL string as the second, and an options hash containing the request body as the third.\n     * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the\n     * type of returned observable.\n     *   * The `responseType` value determines how a successful response body is parsed.\n     *   * If `responseType` is the default `json`, you can pass a type interface for the resulting\n     * object as a type parameter to the call.\n     *\n     * The `observe` value determines the return type, according to what you are interested in\n     * observing.\n     *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including\n     * progress events by default.\n     *   * An `observe` value of response returns an observable of `HttpResponse<T>`,\n     * where the `T` parameter depends on the `responseType` and any optionally provided type\n     * parameter.\n     *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.\n     *\n     */\n    request(first, url, options = {}) {\n        let req;\n        // First, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = first;\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming `GET` unless a method is\n            // provided.\n            // Figure out the headers.\n            let headers = undefined;\n            if (options.headers instanceof HttpHeaders) {\n                headers = options.headers;\n            }\n            else {\n                headers = new HttpHeaders(options.headers);\n            }\n            // Sort out parameters.\n            let params = undefined;\n            if (!!options.params) {\n                if (options.params instanceof HttpParams) {\n                    params = options.params;\n                }\n                else {\n                    params = new HttpParams({ fromObject: options.params });\n                }\n            }\n            // Construct the request.\n            req = new HttpRequest(first, url, (options.body !== undefined ? options.body : null), {\n                headers,\n                params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        const events$ = of(req).pipe(concatMap((req) => this.handler.handle(req)));\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        const res$ = events$.pipe(filter((event) => event instanceof HttpResponse));\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        }));\n                    case 'blob':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        }));\n                    case 'text':\n                        return res$.pipe(map((res) => {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        }));\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return res$.pipe(map((res) => res.body));\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(`Unreachable: unhandled observe type ${options.observe}}`);\n        }\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `DELETE` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     *\n     * @param url     The endpoint URL.\n     * @param options The HTTP options to send with the request.\n     *\n     */\n    delete(url, options = {}) {\n        return this.request('DELETE', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `GET` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    get(url, options = {}) {\n        return this.request('GET', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `HEAD` request to execute on the server. The `HEAD` method returns\n     * meta information about the resource without transferring the\n     * resource itself. See the individual overloads for\n     * details on the return type.\n     */\n    head(url, options = {}) {\n        return this.request('HEAD', url, options);\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes a request with the special method\n     * `JSONP` to be dispatched via the interceptor pipeline.\n     * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain\n     * API endpoints that don't support newer,\n     * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.\n     * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\n     * requests even if the API endpoint is not located on the same domain (origin) as the client-side\n     * application making the request.\n     * The endpoint API must support JSONP callback for JSONP requests to work.\n     * The resource API returns the JSON response wrapped in a callback function.\n     * You can pass the callback function name as one of the query parameters.\n     * Note that JSONP requests can only be used with `GET` requests.\n     *\n     * @param url The resource URL.\n     * @param callbackParam The callback function name.\n     *\n     */\n    jsonp(url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes the configured\n     * `OPTIONS` request to execute on the server. This method allows the client\n     * to determine the supported HTTP methods and other capabilites of an endpoint,\n     * without implying a resource action. See the individual overloads for\n     * details on the return type.\n     */\n    options(url, options = {}) {\n        return this.request('OPTIONS', url, options);\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PATCH` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     */\n    patch(url, body, options = {}) {\n        return this.request('PATCH', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `POST` request to execute on the server. The server responds with the location of\n     * the replaced resource. See the individual overloads for\n     * details on the return type.\n     */\n    post(url, body, options = {}) {\n        return this.request('POST', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PUT` request to execute on the server. The `PUT` method replaces an existing resource\n     * with a new set of values.\n     * See the individual overloads for details on the return type.\n     */\n    put(url, body, options = {}) {\n        return this.request('PUT', url, addBody(options, body));\n    }\n}\nHttpClient.ɵfac = function HttpClient_Factory(t) { return new (t || HttpClient)(ɵngcc0.ɵɵinject(HttpHandler)); };\nHttpClient.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpClient, factory: HttpClient.ɵfac });\nHttpClient.ctorParameters = () => [\n    { type: HttpHandler }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClient, [{\n        type: Injectable\n    }], function () { return [{ type: HttpHandler }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n *\n */\nclass HttpInterceptorHandler {\n    constructor(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    handle(req) {\n        return this.interceptor.intercept(req, this.next);\n    }\n}\n/**\n * A multi-provider token that represents the array of registered\n * `HttpInterceptor` objects.\n *\n * @publicApi\n */\nconst HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nclass NoopInterceptor {\n    intercept(req, next) {\n        return next.handle(req);\n    }\n}\nNoopInterceptor.ɵfac = function NoopInterceptor_Factory(t) { return new (t || NoopInterceptor)(); };\nNoopInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NoopInterceptor, factory: NoopInterceptor.ɵfac });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NoopInterceptor, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nlet nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nconst JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n */\nclass JsonpCallbackContext {\n}\n/**\n * Processes an `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n * @see `HttpHandler`\n * @see `HttpXhrBackend`\n *\n * @publicApi\n */\nclass JsonpClientBackend {\n    constructor(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     */\n    nextCallback() {\n        return `ng_jsonp_callback_${nextRequestId++}`;\n    }\n    /**\n     * Processes a JSONP request and returns an event stream of the results.\n     * @param req The request object.\n     * @returns An observable of the response events.\n     *\n     */\n    handle(req) {\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable((observer) => {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            const callback = this.nextCallback();\n            const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);\n            // Construct the <script> tag and point it at the URL.\n            const node = this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            let body = null;\n            // Whether the response callback has been called.\n            let finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            let cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            this.callbackMap[callback] = (data) => {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            const cleanup = () => {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete this.callbackMap[callback];\n            };\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            const onLoad = (event) => {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body,\n                    status: 200,\n                    statusText: 'OK',\n                    url,\n                }));\n                // Complete the stream, the response is over.\n                observer.complete();\n            };\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            const onError = (error) => {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error,\n                    status: 0,\n                    statusText: 'JSONP Error',\n                    url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return () => {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    }\n}\nJsonpClientBackend.ɵfac = function JsonpClientBackend_Factory(t) { return new (t || JsonpClientBackend)(ɵngcc0.ɵɵinject(JsonpCallbackContext), ɵngcc0.ɵɵinject(DOCUMENT)); };\nJsonpClientBackend.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: JsonpClientBackend, factory: JsonpClientBackend.ɵfac });\nJsonpClientBackend.ctorParameters = () => [\n    { type: JsonpCallbackContext },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JsonpClientBackend, [{\n        type: Injectable\n    }], function () { return [{ type: JsonpCallbackContext }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n/**\n * Identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * @see `HttpInterceptor`\n *\n * @publicApi\n */\nclass JsonpInterceptor {\n    constructor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * Identifies and handles a given JSONP request.\n     * @param req The outgoing request object to handle.\n     * @param next The next interceptor in the chain, or the backend\n     * if no interceptors remain in the chain.\n     * @returns An observable of the event stream.\n     */\n    intercept(req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle(req);\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    }\n}\nJsonpInterceptor.ɵfac = function JsonpInterceptor_Factory(t) { return new (t || JsonpInterceptor)(ɵngcc0.ɵɵinject(JsonpClientBackend)); };\nJsonpInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: JsonpInterceptor, factory: JsonpInterceptor.ɵfac });\nJsonpInterceptor.ctorParameters = () => [\n    { type: JsonpClientBackend }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(JsonpInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: JsonpClientBackend }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * @publicApi\n */\nclass XhrFactory {\n}\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n *\n */\nclass BrowserXhr {\n    constructor() { }\n    build() {\n        return (new XMLHttpRequest());\n    }\n}\nBrowserXhr.ɵfac = function BrowserXhr_Factory(t) { return new (t || BrowserXhr)(); };\nBrowserXhr.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: BrowserXhr, factory: BrowserXhr.ɵfac });\nBrowserXhr.ctorParameters = () => [];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BrowserXhr, [{\n        type: Injectable\n    }], function () { return []; }, null); })();\n/**\n * Uses `XMLHttpRequest` to send requests to a backend server.\n * @see `HttpHandler`\n * @see `JsonpClientBackend`\n *\n * @publicApi\n */\nclass HttpXhrBackend {\n    constructor(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Processes a request and returns a stream of response events.\n     * @param req The request object.\n     * @returns An observable of the response events.\n     */\n    handle(req) {\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the HttpClientJsonpModule\n        if (req.method === 'JSONP') {\n            throw new Error(`Attempted to construct Jsonp request without HttpClientJsonpModule installed.`);\n        }\n        // Everything happens on Observable subscription.\n        return new Observable((observer) => {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            const xhr = this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach((name, values) => xhr.setRequestHeader(name, values.join(',')));\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                const detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                const responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = ((responseType !== 'json') ? responseType : 'text');\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            const reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            let headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            const partialFromXhr = () => {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                const status = xhr.status === 1223 ? 204 : xhr.status;\n                const statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                const headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                const url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers, status, statusText, url });\n                return headerResponse;\n            };\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            const onLoad = () => {\n                // Read response state from the memoized partial data.\n                let { headers, status, statusText, url } = partialFromXhr();\n                // The body will be read out if present.\n                let body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                let ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (req.responseType === 'json' && typeof body === 'string') {\n                    // Save the original body, before attempting XSSI prefix stripping.\n                    const originalBody = body;\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                        body = body !== '' ? JSON.parse(body) : null;\n                    }\n                    catch (error) {\n                        // Since the JSON.parse failed, it's reasonable to assume this might not have been a\n                        // JSON response. Restore the original body (including any XSSI prefix) to deliver\n                        // a better error response.\n                        body = originalBody;\n                        // If this was an error request to begin with, leave it as a string, it probably\n                        // just isn't JSON. Otherwise, deliver the parsing error to the user.\n                        if (ok) {\n                            // Even though the response status was 2xx, this is still an error.\n                            ok = false;\n                            // The parse error contains the text of the body that failed to parse.\n                            body = { error, text: body };\n                        }\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                }\n            };\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            const onError = (error) => {\n                const { url } = partialFromXhr();\n                const res = new HttpErrorResponse({\n                    error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                    url: url || undefined,\n                });\n                observer.error(res);\n            };\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            let sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            const onDownProgress = (event) => {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                let progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            };\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            const onUpProgress = (event) => {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                let progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            };\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send(reqBody);\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return () => {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                if (xhr.readyState !== xhr.DONE) {\n                    xhr.abort();\n                }\n            };\n        });\n    }\n}\nHttpXhrBackend.ɵfac = function HttpXhrBackend_Factory(t) { return new (t || HttpXhrBackend)(ɵngcc0.ɵɵinject(XhrFactory)); };\nHttpXhrBackend.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpXhrBackend, factory: HttpXhrBackend.ɵfac });\nHttpXhrBackend.ctorParameters = () => [\n    { type: XhrFactory }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpXhrBackend, [{\n        type: Injectable\n    }], function () { return [{ type: XhrFactory }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\nconst XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * @publicApi\n */\nclass HttpXsrfTokenExtractor {\n}\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nclass HttpXsrfCookieExtractor {\n    constructor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * @internal for testing\n         */\n        this.parseCount = 0;\n    }\n    getToken() {\n        if (this.platform === 'server') {\n            return null;\n        }\n        const cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    }\n}\nHttpXsrfCookieExtractor.ɵfac = function HttpXsrfCookieExtractor_Factory(t) { return new (t || HttpXsrfCookieExtractor)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(XSRF_COOKIE_NAME)); };\nHttpXsrfCookieExtractor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpXsrfCookieExtractor, factory: HttpXsrfCookieExtractor.ɵfac });\nHttpXsrfCookieExtractor.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_COOKIE_NAME,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpXsrfCookieExtractor, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: String, decorators: [{\n                type: Inject,\n                args: [XSRF_COOKIE_NAME]\n            }] }]; }, null); })();\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nclass HttpXsrfInterceptor {\n    constructor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    intercept(req, next) {\n        const lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        const token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    }\n}\nHttpXsrfInterceptor.ɵfac = function HttpXsrfInterceptor_Factory(t) { return new (t || HttpXsrfInterceptor)(ɵngcc0.ɵɵinject(HttpXsrfTokenExtractor), ɵngcc0.ɵɵinject(XSRF_HEADER_NAME)); };\nHttpXsrfInterceptor.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpXsrfInterceptor, factory: HttpXsrfInterceptor.ɵfac });\nHttpXsrfInterceptor.ctorParameters = () => [\n    { type: HttpXsrfTokenExtractor },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_HEADER_NAME,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpXsrfInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: HttpXsrfTokenExtractor }, { type: String, decorators: [{\n                type: Inject,\n                args: [XSRF_HEADER_NAME]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable `HttpHandler` that applies multiple interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * The interceptors are loaded lazily from the injector, to allow\n * interceptors to themselves inject classes depending indirectly\n * on `HttpInterceptingHandler` itself.\n * @see `HttpInterceptor`\n */\nclass HttpInterceptingHandler {\n    constructor(backend, injector) {\n        this.backend = backend;\n        this.injector = injector;\n        this.chain = null;\n    }\n    handle(req) {\n        if (this.chain === null) {\n            const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n            this.chain = interceptors.reduceRight((next, interceptor) => new HttpInterceptorHandler(next, interceptor), this.backend);\n        }\n        return this.chain.handle(req);\n    }\n}\nHttpInterceptingHandler.ɵfac = function HttpInterceptingHandler_Factory(t) { return new (t || HttpInterceptingHandler)(ɵngcc0.ɵɵinject(HttpBackend), ɵngcc0.ɵɵinject(ɵngcc0.Injector)); };\nHttpInterceptingHandler.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: HttpInterceptingHandler, factory: HttpInterceptingHandler.ɵfac });\nHttpInterceptingHandler.ctorParameters = () => [\n    { type: HttpBackend },\n    { type: Injector }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpInterceptingHandler, [{\n        type: Injectable\n    }], function () { return [{ type: HttpBackend }, { type: ɵngcc0.Injector }]; }, null); })();\n/**\n * Constructs an `HttpHandler` that applies interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * Use as a factory function within `HttpClientModule`.\n *\n *\n */\nfunction interceptingHandler(backend, interceptors = []) {\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight((next, interceptor) => new HttpInterceptorHandler(next, interceptor), backend);\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n * @publicApi\n */\nclass HttpClientXsrfModule {\n    /**\n     * Disable the default XSRF protection.\n     */\n    static disable() {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    }\n    /**\n     * Configure XSRF protection.\n     * @param options An object that can specify either or both\n     * cookie name or header name.\n     * - Cookie name default is `XSRF-TOKEN`.\n     * - Header name default is `X-XSRF-TOKEN`.\n     *\n     */\n    static withOptions(options = {}) {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    }\n}\nHttpClientXsrfModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpClientXsrfModule });\nHttpClientXsrfModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpClientXsrfModule_Factory(t) { return new (t || HttpClientXsrfModule)(); }, providers: [\n        HttpXsrfInterceptor,\n        { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n        { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n        { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n        { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n    ] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClientXsrfModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    HttpXsrfInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                ]\n            }]\n    }], null, null); })();\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n */\nclass HttpClientModule {\n}\nHttpClientModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpClientModule });\nHttpClientModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpClientModule_Factory(t) { return new (t || HttpClientModule)(); }, providers: [\n        HttpClient,\n        { provide: HttpHandler, useClass: HttpInterceptingHandler },\n        HttpXhrBackend,\n        { provide: HttpBackend, useExisting: HttpXhrBackend },\n        BrowserXhr,\n        { provide: XhrFactory, useExisting: BrowserXhr },\n    ], imports: [[\n            HttpClientXsrfModule.withOptions({\n                cookieName: 'XSRF-TOKEN',\n                headerName: 'X-XSRF-TOKEN'\n            }),\n        ]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(HttpClientModule, { imports: [HttpClientXsrfModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClientModule, [{\n        type: NgModule,\n        args: [{\n                /**\n                 * Optional configuration for XSRF protection.\n                 */\n                imports: [\n                    HttpClientXsrfModule.withOptions({\n                        cookieName: 'XSRF-TOKEN',\n                        headerName: 'X-XSRF-TOKEN'\n                    }),\n                ],\n                /**\n                 * Configures the [dependency injector](guide/glossary#injector) where it is imported\n                 * with supporting services for HTTP communications.\n                 */\n                providers: [\n                    HttpClient,\n                    { provide: HttpHandler, useClass: HttpInterceptingHandler },\n                    HttpXhrBackend,\n                    { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    BrowserXhr,\n                    { provide: XhrFactory, useExisting: BrowserXhr },\n                ]\n            }]\n    }], null, null); })();\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * @publicApi\n */\nclass HttpClientJsonpModule {\n}\nHttpClientJsonpModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: HttpClientJsonpModule });\nHttpClientJsonpModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function HttpClientJsonpModule_Factory(t) { return new (t || HttpClientJsonpModule)(); }, providers: [\n        JsonpClientBackend,\n        { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n        { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n    ] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(HttpClientJsonpModule, [{\n        type: NgModule,\n        args: [{\n                providers: [\n                    JsonpClientBackend,\n                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HTTP_INTERCEPTORS, HttpBackend, HttpClient, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpErrorResponse, HttpEventType, HttpHandler, HttpHeaderResponse, HttpHeaders, HttpParams, HttpRequest, HttpResponse, HttpResponseBase, HttpUrlEncodingCodec, HttpXhrBackend, HttpXsrfTokenExtractor, JsonpClientBackend, JsonpInterceptor, XhrFactory, HttpInterceptingHandler as ɵHttpInterceptingHandler, NoopInterceptor as ɵangular_packages_common_http_http_a, JsonpCallbackContext as ɵangular_packages_common_http_http_b, jsonpCallbackContext as ɵangular_packages_common_http_http_c, BrowserXhr as ɵangular_packages_common_http_http_d, XSRF_COOKIE_NAME as ɵangular_packages_common_http_http_e, XSRF_HEADER_NAME as ɵangular_packages_common_http_http_f, HttpXsrfCookieExtractor as ɵangular_packages_common_http_http_g, HttpXsrfInterceptor as ɵangular_packages_common_http_http_h };\n\n//# sourceMappingURL=http.js.map","import { CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Directive, ChangeDetectorRef, Optional, Inject, ContentChildren, ContentChild, Input, forwardRef, ViewChild, EventEmitter, Attribute, Output, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinDisableRipple, setLines, MatLine, MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport { takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager, FocusMonitor } from '@angular/cdk/a11y';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, A, ENTER, SPACE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatDividerModule } from '@angular/material/divider';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatList.\n/** @docs-private */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/material/core';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/cdk/a11y';\n\nconst _c0 = [\"*\"];\nconst _c1 = \".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\";\nconst _c2 = [[[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c3 = [\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c4 = [\"text\"];\nfunction MatListOption_mat_pseudo_checkbox_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"mat-pseudo-checkbox\", 5);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\")(\"disabled\", ctx_r0.disabled);\n} }\nconst _c5 = [\"*\", [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"mat-list-icon\", \"\"], [\"\", \"matListAvatar\", \"\"], [\"\", \"matListIcon\", \"\"]]];\nconst _c6 = [\"*\", \"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"];\nclass MatListBase {\n}\nconst _MatListMixinBase = mixinDisabled(mixinDisableRipple(MatListBase));\n// Boilerplate for applying mixins to MatListItem.\n/** @docs-private */\nclass MatListItemBase {\n}\nconst _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\n/**\n * Injection token that can be used to inject instances of `MatList`. It serves as\n * alternative token to the actual `MatList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_LIST = new InjectionToken('MatList');\n/**\n * Injection token that can be used to inject instances of `MatNavList`. It serves as\n * alternative token to the actual `MatNavList` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_NAV_LIST = new InjectionToken('MatNavList');\nclass MatNavList extends _MatListMixinBase {\n    constructor() {\n        super(...arguments);\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatNavList.ɵfac = function MatNavList_Factory(t) { return ɵMatNavList_BaseFactory(t || MatNavList); };\nMatNavList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatNavList, selectors: [[\"mat-nav-list\"]], hostAttrs: [\"role\", \"navigation\", 1, \"mat-nav-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matNavList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_NAV_LIST, useExisting: MatNavList }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatNavList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [_c1], encapsulation: 2, changeDetection: 0 });\nconst ɵMatNavList_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatNavList);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatNavList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-nav-list',\n                exportAs: 'matNavList',\n                host: {\n                    'role': 'navigation',\n                    'class': 'mat-nav-list mat-list-base'\n                },\n                template: \"<ng-content></ng-content>\\n\\n\",\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{ provide: MAT_NAV_LIST, useExisting: MatNavList }],\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], null, null); })();\nclass MatList extends _MatListMixinBase {\n    constructor(_elementRef) {\n        super();\n        this._elementRef = _elementRef;\n        /** Emits when the state of the list changes. */\n        this._stateChanges = new Subject();\n        if (this._getListType() === 'action-list') {\n            _elementRef.nativeElement.classList.add('mat-action-list');\n        }\n    }\n    _getListType() {\n        const nodeName = this._elementRef.nativeElement.nodeName.toLowerCase();\n        if (nodeName === 'mat-list') {\n            return 'list';\n        }\n        if (nodeName === 'mat-action-list') {\n            return 'action-list';\n        }\n        return null;\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatList.ɵfac = function MatList_Factory(t) { return new (t || MatList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatList, selectors: [[\"mat-list\"], [\"mat-action-list\"]], hostAttrs: [1, \"mat-list\", \"mat-list-base\"], inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_LIST, useExisting: MatList }]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [_c1], encapsulation: 2, changeDetection: 0 });\nMatList.ctorParameters = () => [\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list, mat-action-list',\n                exportAs: 'matList',\n                template: \"<ng-content></ng-content>\\n\\n\",\n                host: {\n                    'class': 'mat-list mat-list-base'\n                },\n                inputs: ['disableRipple', 'disabled'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{ provide: MAT_LIST, useExisting: MatList }],\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListAvatarCssMatStyler {\n}\nMatListAvatarCssMatStyler.ɵfac = function MatListAvatarCssMatStyler_Factory(t) { return new (t || MatListAvatarCssMatStyler)(); };\nMatListAvatarCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListAvatarCssMatStyler, selectors: [[\"\", \"mat-list-avatar\", \"\"], [\"\", \"matListAvatar\", \"\"]], hostAttrs: [1, \"mat-list-avatar\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListAvatarCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-avatar], [matListAvatar]',\n                host: { 'class': 'mat-list-avatar' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListIconCssMatStyler {\n}\nMatListIconCssMatStyler.ɵfac = function MatListIconCssMatStyler_Factory(t) { return new (t || MatListIconCssMatStyler)(); };\nMatListIconCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListIconCssMatStyler, selectors: [[\"\", \"mat-list-icon\", \"\"], [\"\", \"matListIcon\", \"\"]], hostAttrs: [1, \"mat-list-icon\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListIconCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-list-icon], [matListIcon]',\n                host: { 'class': 'mat-list-icon' }\n            }]\n    }], null, null); })();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatListSubheaderCssMatStyler {\n}\nMatListSubheaderCssMatStyler.ɵfac = function MatListSubheaderCssMatStyler_Factory(t) { return new (t || MatListSubheaderCssMatStyler)(); };\nMatListSubheaderCssMatStyler.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatListSubheaderCssMatStyler, selectors: [[\"\", \"mat-subheader\", \"\"], [\"\", \"matSubheader\", \"\"]], hostAttrs: [1, \"mat-subheader\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListSubheaderCssMatStyler, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-subheader], [matSubheader]',\n                host: { 'class': 'mat-subheader' }\n            }]\n    }], null, null); })();\n/** An item within a Material Design list. */\nclass MatListItem extends _MatListItemMixinBase {\n    constructor(_element, _changeDetectorRef, navList, list) {\n        super();\n        this._element = _element;\n        this._isInteractiveList = false;\n        this._destroyed = new Subject();\n        this._disabled = false;\n        this._isInteractiveList = !!(navList || (list && list._getListType() === 'action-list'));\n        this._list = navList || list;\n        // If no type attribute is specified for <button>, set it to \"button\".\n        // If a type attribute is already specified, do nothing.\n        const element = this._getHostElement();\n        if (element.nodeName.toLowerCase() === 'button' && !element.hasAttribute('type')) {\n            element.setAttribute('type', 'button');\n        }\n        if (this._list) {\n            // React to changes in the state of the parent list since\n            // some of the item's properties depend on it (e.g. `disableRipple`).\n            this._list._stateChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                _changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    /** Whether the option is disabled. */\n    get disabled() { return this._disabled || !!(this._list && this._list.disabled); }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return !this._isInteractiveList || this.disableRipple ||\n            !!(this._list && this._list.disableRipple);\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n}\nMatListItem.ɵfac = function MatListItem_Factory(t) { return new (t || MatListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_NAV_LIST, 8), ɵngcc0.ɵɵdirectiveInject(MAT_LIST, 8)); };\nMatListItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListItem, selectors: [[\"mat-list-item\"], [\"a\", \"mat-list-item\", \"\"], [\"button\", \"mat-list-item\", \"\"]], contentQueries: function MatListItem_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, hostAttrs: [1, \"mat-list-item\", \"mat-focus-indicator\"], hostVars: 6, hostBindings: function MatListItem_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-avatar\", ctx._avatar || ctx._icon)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon);\n    } }, inputs: { disableRipple: \"disableRipple\", disabled: \"disabled\" }, exportAs: [\"matListItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c3, decls: 6, vars: 2, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-list-text\"]], template: function MatListItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c2);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2);\n        ɵngcc0.ɵɵprojection(4, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(5, 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n    } }, directives: [ɵngcc1.MatRipple], encapsulation: 2, changeDetection: 0 });\nMatListItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatNavList, decorators: [{ type: Optional }, { type: Inject, args: [MAT_NAV_LIST,] }] },\n    { type: MatList, decorators: [{ type: Optional }, { type: Inject, args: [MAT_LIST,] }] }\n];\nMatListItem.propDecorators = {\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListItem, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-item, a[mat-list-item], button[mat-list-item]',\n                exportAs: 'matListItem',\n                host: {\n                    'class': 'mat-list-item mat-focus-indicator',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    // @breaking-change 8.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\n                    '[class.mat-list-item-avatar]': '_avatar || _icon',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon'\n                },\n                inputs: ['disableRipple'],\n                template: \"<div class=\\\"mat-list-item-content\\\">\\n  <div class=\\\"mat-list-item-ripple\\\" mat-ripple\\n       [matRippleTrigger]=\\\"_getHostElement()\\\"\\n       [matRippleDisabled]=\\\"_isRippleDisabled()\\\">\\n  </div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n  <div class=\\\"mat-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n\\n  <ng-content></ng-content>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatNavList, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_NAV_LIST]\n            }] }, { type: MatList, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_LIST]\n            }] }]; }, { disabled: [{\n            type: Input\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectionListBase {\n}\nconst _MatSelectionListMixinBase = mixinDisableRipple(MatSelectionListBase);\nclass MatListOptionBase {\n}\nconst _MatListOptionMixinBase = mixinDisableRipple(MatListOptionBase);\n/** @docs-private */\nconst MAT_SELECTION_LIST_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSelectionList),\n    multi: true\n};\n/** Change event that is being fired whenever the selected state of an option changes. */\nclass MatSelectionListChange {\n    constructor(\n    /** Reference to the selection list that emitted the event. */\n    source, \n    /**\n     * Reference to the option that has been changed.\n     * @deprecated Use `options` instead, because some events may change more than one option.\n     * @breaking-change 12.0.0\n     */\n    option, \n    /** Reference to the options that have been changed. */\n    options) {\n        this.source = source;\n        this.option = option;\n        this.options = options;\n    }\n}\n/**\n * Component for list-options of selection-list. Each list-option can automatically\n * generate a checkbox and can put current item into the selectionModel of selection-list\n * if the current item is selected.\n */\nclass MatListOption extends _MatListOptionMixinBase {\n    constructor(_element, _changeDetector, \n    /** @docs-private */\n    selectionList) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this.selectionList = selectionList;\n        this._selected = false;\n        this._disabled = false;\n        this._hasFocus = false;\n        /** Whether the label should appear before or after the checkbox. Defaults to 'after' */\n        this.checkboxPosition = 'after';\n        /**\n         * This is set to true after the first OnChanges cycle so we don't clear the value of `selected`\n         * in the first cycle.\n         */\n        this._inputsInitialized = false;\n    }\n    /** Theme color of the list option. This sets the color of the checkbox. */\n    get color() { return this._color || this.selectionList.color; }\n    set color(newValue) { this._color = newValue; }\n    /** Value of the option */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (this.selected &&\n            !this.selectionList.compareWith(newValue, this.value) &&\n            this._inputsInitialized) {\n            this.selected = false;\n        }\n        this._value = newValue;\n    }\n    /** Whether the option is disabled. */\n    get disabled() { return this._disabled || (this.selectionList && this.selectionList.disabled); }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._disabled) {\n            this._disabled = newValue;\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** Whether the option is selected. */\n    get selected() { return this.selectionList.selectedOptions.isSelected(this); }\n    set selected(value) {\n        const isSelected = coerceBooleanProperty(value);\n        if (isSelected !== this._selected) {\n            this._setSelected(isSelected);\n            this.selectionList._reportValueChange();\n        }\n    }\n    ngOnInit() {\n        const list = this.selectionList;\n        if (list._value && list._value.some(value => list.compareWith(value, this._value))) {\n            this._setSelected(true);\n        }\n        const wasSelected = this._selected;\n        // List options that are selected at initialization can't be reported properly to the form\n        // control. This is because it takes some time until the selection-list knows about all\n        // available options. Also it can happen that the ControlValueAccessor has an initial value\n        // that should be used instead. Deferring the value change report to the next tick ensures\n        // that the form control value is not being overwritten.\n        Promise.resolve().then(() => {\n            if (this._selected || wasSelected) {\n                this.selected = true;\n                this._changeDetector.markForCheck();\n            }\n        });\n        this._inputsInitialized = true;\n    }\n    ngAfterContentInit() {\n        setLines(this._lines, this._element);\n    }\n    ngOnDestroy() {\n        if (this.selected) {\n            // We have to delay this until the next tick in order\n            // to avoid changed after checked errors.\n            Promise.resolve().then(() => {\n                this.selected = false;\n            });\n        }\n        const hadFocus = this._hasFocus;\n        const newActiveItem = this.selectionList._removeOptionFromList(this);\n        // Only move focus if this option was focused at the time it was destroyed.\n        if (hadFocus && newActiveItem) {\n            newActiveItem.focus();\n        }\n    }\n    /** Toggles the selection state of the option. */\n    toggle() {\n        this.selected = !this.selected;\n    }\n    /** Allows for programmatic focusing of the option. */\n    focus() {\n        this._element.nativeElement.focus();\n    }\n    /**\n     * Returns the list item's text label. Implemented as a part of the FocusKeyManager.\n     * @docs-private\n     */\n    getLabel() {\n        return this._text ? (this._text.nativeElement.textContent || '') : '';\n    }\n    /** Whether this list item should show a ripple effect when clicked. */\n    _isRippleDisabled() {\n        return this.disabled || this.disableRipple || this.selectionList.disableRipple;\n    }\n    _handleClick() {\n        if (!this.disabled && (this.selectionList.multiple || !this.selected)) {\n            this.toggle();\n            // Emit a change event if the selected state of the option changed through user interaction.\n            this.selectionList._emitChangeEvent([this]);\n        }\n    }\n    _handleFocus() {\n        this.selectionList._setFocusedOption(this);\n        this._hasFocus = true;\n    }\n    _handleBlur() {\n        this.selectionList._onTouched();\n        this._hasFocus = false;\n    }\n    /** Retrieves the DOM element of the component host. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    /** Sets the selected state of the option. Returns whether the value has changed. */\n    _setSelected(selected) {\n        if (selected === this._selected) {\n            return false;\n        }\n        this._selected = selected;\n        if (selected) {\n            this.selectionList.selectedOptions.select(this);\n        }\n        else {\n            this.selectionList.selectedOptions.deselect(this);\n        }\n        this._changeDetector.markForCheck();\n        return true;\n    }\n    /**\n     * Notifies Angular that the option needs to be checked in the next change detection run. Mainly\n     * used to trigger an update of the list option if the disabled state of the selection list\n     * changed.\n     */\n    _markForCheck() {\n        this._changeDetector.markForCheck();\n    }\n}\nMatListOption.ɵfac = function MatListOption_Factory(t) { return new (t || MatListOption)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => MatSelectionList))); };\nMatListOption.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatListOption, selectors: [[\"mat-list-option\"]], contentQueries: function MatListOption_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListAvatarCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListIconCssMatStyler, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatLine, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._lines = _t);\n    } }, viewQuery: function MatListOption_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c4, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._text = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-list-item\", \"mat-list-option\", \"mat-focus-indicator\"], hostVars: 15, hostBindings: function MatListOption_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatListOption_focus_HostBindingHandler() { return ctx._handleFocus(); })(\"blur\", function MatListOption_blur_HostBindingHandler() { return ctx._handleBlur(); })(\"click\", function MatListOption_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled)(\"tabindex\", -1);\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-disabled\", ctx.disabled)(\"mat-list-item-with-avatar\", ctx._avatar || ctx._icon)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color !== \"primary\" && ctx.color !== \"warn\")(\"mat-warn\", ctx.color === \"warn\")(\"mat-list-single-selected-option\", ctx.selected && !ctx.selectionList.multiple);\n    } }, inputs: { disableRipple: \"disableRipple\", checkboxPosition: \"checkboxPosition\", color: \"color\", value: \"value\", selected: \"selected\", disabled: \"disabled\" }, exportAs: [\"matListOption\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c6, decls: 7, vars: 5, consts: [[1, \"mat-list-item-content\"], [\"mat-ripple\", \"\", 1, \"mat-list-item-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [3, \"state\", \"disabled\", 4, \"ngIf\"], [1, \"mat-list-text\"], [\"text\", \"\"], [3, \"state\", \"disabled\"]], template: function MatListOption_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c5);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelement(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, MatListOption_mat_pseudo_checkbox_2_Template, 1, 2, \"mat-pseudo-checkbox\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵprojection(5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(6, 1);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-list-item-content-reverse\", ctx.checkboxPosition == \"after\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx._isRippleDisabled());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.selectionList.multiple);\n    } }, directives: [ɵngcc1.MatRipple, ɵngcc2.NgIf, ɵngcc1.MatPseudoCheckbox], encapsulation: 2, changeDetection: 0 });\nMatListOption.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSelectionList, decorators: [{ type: Inject, args: [forwardRef(() => MatSelectionList),] }] }\n];\nMatListOption.propDecorators = {\n    _avatar: [{ type: ContentChild, args: [MatListAvatarCssMatStyler,] }],\n    _icon: [{ type: ContentChild, args: [MatListIconCssMatStyler,] }],\n    _lines: [{ type: ContentChildren, args: [MatLine, { descendants: true },] }],\n    _text: [{ type: ViewChild, args: ['text',] }],\n    checkboxPosition: [{ type: Input }],\n    color: [{ type: Input }],\n    value: [{ type: Input }],\n    disabled: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListOption, [{\n        type: Component,\n        args: [{\n                selector: 'mat-list-option',\n                exportAs: 'matListOption',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'option',\n                    'class': 'mat-list-item mat-list-option mat-focus-indicator',\n                    '(focus)': '_handleFocus()',\n                    '(blur)': '_handleBlur()',\n                    '(click)': '_handleClick()',\n                    '[class.mat-list-item-disabled]': 'disabled',\n                    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\n                    // Manually set the \"primary\" or \"warn\" class if the color has been explicitly\n                    // set to \"primary\" or \"warn\". The pseudo checkbox picks up these classes for\n                    // its theme.\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    // Even though accent is the default, we need to set this class anyway, because the  list might\n                    // be placed inside a parent that has one of the other colors with a higher specificity.\n                    '[class.mat-accent]': 'color !== \"primary\" && color !== \"warn\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    '[class.mat-list-single-selected-option]': 'selected && !selectionList.multiple',\n                    '[attr.aria-selected]': 'selected',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabindex]': '-1'\n                },\n                template: \"<div class=\\\"mat-list-item-content\\\"\\n  [class.mat-list-item-content-reverse]=\\\"checkboxPosition == 'after'\\\">\\n\\n  <div mat-ripple\\n    class=\\\"mat-list-item-ripple\\\"\\n    [matRippleTrigger]=\\\"_getHostElement()\\\"\\n    [matRippleDisabled]=\\\"_isRippleDisabled()\\\"></div>\\n\\n  <mat-pseudo-checkbox\\n    *ngIf=\\\"selectionList.multiple\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\"\\n    [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n  <div class=\\\"mat-list-text\\\" #text><ng-content></ng-content></div>\\n\\n  <ng-content select=\\\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\\\">\\n  </ng-content>\\n\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSelectionList, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => MatSelectionList)]\n            }] }]; }, { checkboxPosition: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], _avatar: [{\n            type: ContentChild,\n            args: [MatListAvatarCssMatStyler]\n        }], _icon: [{\n            type: ContentChild,\n            args: [MatListIconCssMatStyler]\n        }], _lines: [{\n            type: ContentChildren,\n            args: [MatLine, { descendants: true }]\n        }], _text: [{\n            type: ViewChild,\n            args: ['text']\n        }] }); })();\n/**\n * Material Design list component where each item is a selectable option. Behaves as a listbox.\n */\nclass MatSelectionList extends _MatSelectionListMixinBase {\n    constructor(_element, \n    // @breaking-change 11.0.0 Remove `tabIndex` parameter.\n    tabIndex, _changeDetector, \n    // @breaking-change 11.0.0 `_focusMonitor` parameter to become required.\n    _focusMonitor) {\n        super();\n        this._element = _element;\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._multiple = true;\n        this._contentInitialized = false;\n        /** Emits a change event whenever the selected state of an option changes. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Tabindex of the selection list.\n         * @breaking-change 11.0.0 Remove `tabIndex` input.\n         */\n        this.tabIndex = 0;\n        /** Theme color of the selection list. This sets the checkbox color for all list options. */\n        this.color = 'accent';\n        /**\n         * Function used for comparing an option against the selected value when determining which\n         * options should appear as selected. The first argument is the value of an options. The second\n         * one is a value from the selected value. A boolean must be returned.\n         */\n        this.compareWith = (a1, a2) => a1 === a2;\n        this._disabled = false;\n        /** The currently selected options. */\n        this.selectedOptions = new SelectionModel(this._multiple);\n        /** The tabindex of the selection list. */\n        this._tabIndex = -1;\n        /** View to model callback that should be called whenever the selected options change. */\n        this._onChange = (_) => { };\n        /** Emits when the list has been destroyed. */\n        this._destroyed = new Subject();\n        /** View to model callback that should be called if the list or its options lost focus. */\n        this._onTouched = () => { };\n    }\n    /** Whether the selection list is disabled. */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // The `MatSelectionList` and `MatListOption` are using the `OnPush` change detection\n        // strategy. Therefore the options will not check for any changes if the `MatSelectionList`\n        // changed its state. Since we know that a change to `disabled` property of the list affects\n        // the state of the options, we manually mark each option for check.\n        this._markOptionsForCheck();\n    }\n    /** Whether selection is limited to one or multiple items (default multiple). */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._multiple) {\n            if (this._contentInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw new Error('Cannot change `multiple` mode of mat-selection-list after initialization.');\n            }\n            this._multiple = newValue;\n            this.selectedOptions = new SelectionModel(this._multiple, this.selectedOptions.selected);\n        }\n    }\n    ngAfterContentInit() {\n        var _a;\n        this._contentInitialized = true;\n        this._keyManager = new FocusKeyManager(this.options)\n            .withWrap()\n            .withTypeAhead()\n            .withHomeAndEnd()\n            // Allow disabled items to be focusable. For accessibility reasons, there must be a way for\n            // screenreader users, that allows reading the different options of the list.\n            .skipPredicate(() => false)\n            .withAllowedModifierKeys(['shiftKey']);\n        if (this._value) {\n            this._setOptionsFromValues(this._value);\n        }\n        // If the user attempts to tab out of the selection list, allow focus to escape.\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._allowFocusEscape();\n        });\n        // When the number of options change, update the tabindex of the selection list.\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            this._updateTabIndex();\n        });\n        // Sync external changes to the model back to the options.\n        this.selectedOptions.changed.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            if (event.added) {\n                for (let item of event.added) {\n                    item.selected = true;\n                }\n            }\n            if (event.removed) {\n                for (let item of event.removed) {\n                    item.selected = false;\n                }\n            }\n        });\n        // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n        (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.monitor(this._element).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n            if (origin === 'keyboard' || origin === 'program') {\n                const activeIndex = this._keyManager.activeItemIndex;\n                if (!activeIndex || activeIndex === -1) {\n                    // If there is no active index, set focus to the first option.\n                    this._keyManager.setFirstItemActive();\n                }\n                else {\n                    // Otherwise, set focus to the active option.\n                    this._keyManager.setActiveItem(activeIndex);\n                }\n            }\n        });\n    }\n    ngOnChanges(changes) {\n        const disableRippleChanges = changes['disableRipple'];\n        const colorChanges = changes['color'];\n        if ((disableRippleChanges && !disableRippleChanges.firstChange) ||\n            (colorChanges && !colorChanges.firstChange)) {\n            this._markOptionsForCheck();\n        }\n    }\n    ngOnDestroy() {\n        var _a;\n        // @breaking-change 11.0.0 Remove null assertion once _focusMonitor is required.\n        (_a = this._focusMonitor) === null || _a === void 0 ? void 0 : _a.stopMonitoring(this._element);\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._isDestroyed = true;\n    }\n    /** Focuses the selection list. */\n    focus(options) {\n        this._element.nativeElement.focus(options);\n    }\n    /** Selects all of the options. */\n    selectAll() {\n        this._setAllOptionsSelected(true);\n    }\n    /** Deselects all of the options. */\n    deselectAll() {\n        this._setAllOptionsSelected(false);\n    }\n    /** Sets the focused option of the selection-list. */\n    _setFocusedOption(option) {\n        this._keyManager.updateActiveItem(option);\n    }\n    /**\n     * Removes an option from the selection list and updates the active item.\n     * @returns Currently-active item.\n     */\n    _removeOptionFromList(option) {\n        const optionIndex = this._getOptionIndex(option);\n        if (optionIndex > -1 && this._keyManager.activeItemIndex === optionIndex) {\n            // Check whether the option is the last item\n            if (optionIndex > 0) {\n                this._keyManager.updateActiveItem(optionIndex - 1);\n            }\n            else if (optionIndex === 0 && this.options.length > 1) {\n                this._keyManager.updateActiveItem(Math.min(optionIndex + 1, this.options.length - 1));\n            }\n        }\n        return this._keyManager.activeItem;\n    }\n    /** Passes relevant key presses to our key manager. */\n    _keydown(event) {\n        const keyCode = event.keyCode;\n        const manager = this._keyManager;\n        const previousFocusIndex = manager.activeItemIndex;\n        const hasModifier = hasModifierKey(event);\n        switch (keyCode) {\n            case SPACE:\n            case ENTER:\n                if (!hasModifier && !manager.isTyping()) {\n                    this._toggleFocusedOption();\n                    // Always prevent space from scrolling the page since the list has focus\n                    event.preventDefault();\n                }\n                break;\n            default:\n                // The \"A\" key gets special treatment, because it's used for the \"select all\" functionality.\n                if (keyCode === A && this.multiple && hasModifierKey(event, 'ctrlKey') &&\n                    !manager.isTyping()) {\n                    const shouldSelect = this.options.some(option => !option.disabled && !option.selected);\n                    this._setAllOptionsSelected(shouldSelect, true, true);\n                    event.preventDefault();\n                }\n                else {\n                    manager.onKeydown(event);\n                }\n        }\n        if (this.multiple && (keyCode === UP_ARROW || keyCode === DOWN_ARROW) && event.shiftKey &&\n            manager.activeItemIndex !== previousFocusIndex) {\n            this._toggleFocusedOption();\n        }\n    }\n    /** Reports a value change to the ControlValueAccessor */\n    _reportValueChange() {\n        // Stop reporting value changes after the list has been destroyed. This avoids\n        // cases where the list might wrongly reset its value once it is removed, but\n        // the form control is still live.\n        if (this.options && !this._isDestroyed) {\n            const value = this._getSelectedOptionValues();\n            this._onChange(value);\n            this._value = value;\n        }\n    }\n    /** Emits a change event if the selected state of an option changed. */\n    _emitChangeEvent(options) {\n        this.selectionChange.emit(new MatSelectionListChange(this, options[0], options));\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(values) {\n        this._value = values;\n        if (this.options) {\n            this._setOptionsFromValues(values || []);\n        }\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Sets the selected options based on the specified values. */\n    _setOptionsFromValues(values) {\n        this.options.forEach(option => option._setSelected(false));\n        values.forEach(value => {\n            const correspondingOption = this.options.find(option => {\n                // Skip options that are already in the model. This allows us to handle cases\n                // where the same primitive value is selected multiple times.\n                return option.selected ? false : this.compareWith(option.value, value);\n            });\n            if (correspondingOption) {\n                correspondingOption._setSelected(true);\n            }\n        });\n    }\n    /** Returns the values of the selected options. */\n    _getSelectedOptionValues() {\n        return this.options.filter(option => option.selected).map(option => option.value);\n    }\n    /** Toggles the state of the currently focused option if enabled. */\n    _toggleFocusedOption() {\n        let focusedIndex = this._keyManager.activeItemIndex;\n        if (focusedIndex != null && this._isValidIndex(focusedIndex)) {\n            let focusedOption = this.options.toArray()[focusedIndex];\n            if (focusedOption && !focusedOption.disabled && (this._multiple || !focusedOption.selected)) {\n                focusedOption.toggle();\n                // Emit a change event because the focused option changed its state through user\n                // interaction.\n                this._emitChangeEvent([focusedOption]);\n            }\n        }\n    }\n    /**\n     * Sets the selected state on all of the options\n     * and emits an event if anything changed.\n     */\n    _setAllOptionsSelected(isSelected, skipDisabled, isUserInput) {\n        // Keep track of whether anything changed, because we only want to\n        // emit the changed event when something actually changed.\n        const changedOptions = [];\n        this.options.forEach(option => {\n            if ((!skipDisabled || !option.disabled) && option._setSelected(isSelected)) {\n                changedOptions.push(option);\n            }\n        });\n        if (changedOptions.length) {\n            this._reportValueChange();\n            if (isUserInput) {\n                this._emitChangeEvent(changedOptions);\n            }\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of options.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.options.length;\n    }\n    /** Returns the index of the specified list option. */\n    _getOptionIndex(option) {\n        return this.options.toArray().indexOf(option);\n    }\n    /** Marks all the options to be checked in the next change detection run. */\n    _markOptionsForCheck() {\n        if (this.options) {\n            this.options.forEach(option => option._markForCheck());\n        }\n    }\n    /**\n     * Removes the tabindex from the selection list and resets it back afterwards, allowing the user\n     * to tab out of it. This prevents the list from capturing focus and redirecting it back within\n     * the list, creating a focus trap if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        this._tabIndex = -1;\n        setTimeout(() => {\n            this._tabIndex = 0;\n            this._changeDetector.markForCheck();\n        });\n    }\n    /** Updates the tabindex based upon if the selection list is empty. */\n    _updateTabIndex() {\n        this._tabIndex = (this.options.length === 0) ? -1 : 0;\n    }\n}\nMatSelectionList.ɵfac = function MatSelectionList_Factory(t) { return new (t || MatSelectionList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FocusMonitor)); };\nMatSelectionList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSelectionList, selectors: [[\"mat-selection-list\"]], contentQueries: function MatSelectionList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatListOption, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.options = _t);\n    } }, hostAttrs: [\"role\", \"listbox\", 1, \"mat-selection-list\", \"mat-list-base\"], hostVars: 3, hostBindings: function MatSelectionList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatSelectionList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-multiselectable\", ctx.multiple)(\"aria-disabled\", ctx.disabled.toString())(\"tabindex\", ctx._tabIndex);\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", color: \"color\", compareWith: \"compareWith\", disabled: \"disabled\", multiple: \"multiple\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"matSelectionList\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_SELECTION_LIST_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatSelectionList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [_c1], encapsulation: 2, changeDetection: 0 });\nMatSelectionList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor }\n];\nMatSelectionList.propDecorators = {\n    options: [{ type: ContentChildren, args: [MatListOption, { descendants: true },] }],\n    selectionChange: [{ type: Output }],\n    tabIndex: [{ type: Input }],\n    color: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    disabled: [{ type: Input }],\n    multiple: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSelectionList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-selection-list',\n                exportAs: 'matSelectionList',\n                inputs: ['disableRipple'],\n                host: {\n                    'role': 'listbox',\n                    'class': 'mat-selection-list mat-list-base',\n                    '(keydown)': '_keydown($event)',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.tabindex]': '_tabIndex'\n                },\n                template: '<ng-content></ng-content>',\n                encapsulation: ViewEncapsulation.None,\n                providers: [MAT_SELECTION_LIST_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-subheader{display:flex;box-sizing:border-box;padding:16px;align-items:center}.mat-list-base .mat-subheader{margin:0}.mat-list-base{padding-top:8px;display:block;-webkit-tap-highlight-color:transparent}.mat-list-base .mat-subheader{height:48px;line-height:16px}.mat-list-base .mat-subheader:first-child{margin-top:-8px}.mat-list-base .mat-list-item,.mat-list-base .mat-list-option{display:block;height:48px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base .mat-list-item .mat-list-item-content,.mat-list-base .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base .mat-list-item .mat-list-item-content-reverse,.mat-list-base .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base .mat-list-item .mat-list-item-ripple,.mat-list-base .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar,.mat-list-base .mat-list-option.mat-list-item-with-avatar{height:56px}.mat-list-base .mat-list-item.mat-2-line,.mat-list-base .mat-list-option.mat-2-line{height:72px}.mat-list-base .mat-list-item.mat-3-line,.mat-list-base .mat-list-option.mat-3-line{height:88px}.mat-list-base .mat-list-item.mat-multi-line,.mat-list-base .mat-list-option.mat-multi-line{height:auto}.mat-list-base .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base .mat-list-item .mat-list-text,.mat-list-base .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base .mat-list-item .mat-list-text>*,.mat-list-base .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base .mat-list-item .mat-list-text:empty,.mat-list-base .mat-list-option .mat-list-text:empty{display:none}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base .mat-list-item .mat-list-avatar,.mat-list-base .mat-list-option .mat-list-avatar{flex-shrink:0;width:40px;height:40px;border-radius:50%;object-fit:cover}.mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:72px;width:calc(100% - 72px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:72px}.mat-list-base .mat-list-item .mat-list-icon,.mat-list-base .mat-list-option .mat-list-icon{flex-shrink:0;width:24px;height:24px;font-size:24px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:64px;width:calc(100% - 64px)}[dir=rtl] .mat-list-base .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:64px}.mat-list-base .mat-list-item .mat-divider,.mat-list-base .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base .mat-list-item .mat-divider,[dir=rtl] .mat-list-base .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-list-base[dense]{padding-top:4px;display:block}.mat-list-base[dense] .mat-subheader{height:40px;line-height:8px}.mat-list-base[dense] .mat-subheader:first-child{margin-top:-4px}.mat-list-base[dense] .mat-list-item,.mat-list-base[dense] .mat-list-option{display:block;height:40px;-webkit-tap-highlight-color:transparent;width:100%;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-item-content,.mat-list-base[dense] .mat-list-option .mat-list-item-content{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;padding:0 16px;position:relative;height:inherit}.mat-list-base[dense] .mat-list-item .mat-list-item-content-reverse,.mat-list-base[dense] .mat-list-option .mat-list-item-content-reverse{display:flex;align-items:center;padding:0 16px;flex-direction:row-reverse;justify-content:space-around}.mat-list-base[dense] .mat-list-item .mat-list-item-ripple,.mat-list-base[dense] .mat-list-option .mat-list-item-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar{height:48px}.mat-list-base[dense] .mat-list-item.mat-2-line,.mat-list-base[dense] .mat-list-option.mat-2-line{height:60px}.mat-list-base[dense] .mat-list-item.mat-3-line,.mat-list-base[dense] .mat-list-option.mat-3-line{height:76px}.mat-list-base[dense] .mat-list-item.mat-multi-line,.mat-list-base[dense] .mat-list-option.mat-multi-line{height:auto}.mat-list-base[dense] .mat-list-item.mat-multi-line .mat-list-item-content,.mat-list-base[dense] .mat-list-option.mat-multi-line .mat-list-item-content{padding-top:16px;padding-bottom:16px}.mat-list-base[dense] .mat-list-item .mat-list-text,.mat-list-base[dense] .mat-list-option .mat-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden;padding:0}.mat-list-base[dense] .mat-list-item .mat-list-text>*,.mat-list-base[dense] .mat-list-option .mat-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-list-base[dense] .mat-list-item .mat-list-text:empty,.mat-list-base[dense] .mat-list-option .mat-list-text:empty{display:none}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:0;padding-left:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:0}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-left:0;padding-right:16px}[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-item.mat-list-option .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar .mat-list-item-content-reverse .mat-list-text,[dir=rtl] .mat-list-base[dense] .mat-list-option.mat-list-option .mat-list-item-content-reverse .mat-list-text{padding-right:0;padding-left:16px}.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-item.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content-reverse .mat-list-text,.mat-list-base[dense] .mat-list-option.mat-list-item-with-avatar.mat-list-option .mat-list-item-content .mat-list-text{padding-right:16px;padding-left:16px}.mat-list-base[dense] .mat-list-item .mat-list-avatar,.mat-list-base[dense] .mat-list-option .mat-list-avatar{flex-shrink:0;width:36px;height:36px;border-radius:50%;object-fit:cover}.mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:68px;width:calc(100% - 68px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-avatar~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-avatar~.mat-divider-inset{margin-left:auto;margin-right:68px}.mat-list-base[dense] .mat-list-item .mat-list-icon,.mat-list-base[dense] .mat-list-option .mat-list-icon{flex-shrink:0;width:20px;height:20px;font-size:20px;box-sizing:content-box;border-radius:50%;padding:4px}.mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:60px;width:calc(100% - 60px)}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-list-icon~.mat-divider-inset,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-list-icon~.mat-divider-inset{margin-left:auto;margin-right:60px}.mat-list-base[dense] .mat-list-item .mat-divider,.mat-list-base[dense] .mat-list-option .mat-divider{position:absolute;bottom:0;left:0;width:100%;margin:0}[dir=rtl] .mat-list-base[dense] .mat-list-item .mat-divider,[dir=rtl] .mat-list-base[dense] .mat-list-option .mat-divider{margin-left:auto;margin-right:0}.mat-list-base[dense] .mat-list-item .mat-divider.mat-divider-inset,.mat-list-base[dense] .mat-list-option .mat-divider.mat-divider-inset{position:absolute}.mat-nav-list a{text-decoration:none;color:inherit}.mat-nav-list .mat-list-item{cursor:pointer;outline:none}mat-action-list button{background:none;color:inherit;border:none;font:inherit;outline:inherit;-webkit-tap-highlight-color:transparent;text-align:left}[dir=rtl] mat-action-list button{text-align:right}mat-action-list button::-moz-focus-inner{border:0}mat-action-list .mat-list-item{cursor:pointer;outline:inherit}.mat-list-option:not(.mat-list-item-disabled){cursor:pointer;outline:none}.mat-list-item-disabled{pointer-events:none}.cdk-high-contrast-active .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active :host .mat-list-item-disabled{opacity:.5}.cdk-high-contrast-active .mat-selection-list:focus{outline-style:dotted}.cdk-high-contrast-active .mat-list-option:hover,.cdk-high-contrast-active .mat-list-option:focus,.cdk-high-contrast-active .mat-nav-list .mat-list-item:hover,.cdk-high-contrast-active .mat-nav-list .mat-list-item:focus,.cdk-high-contrast-active mat-action-list .mat-list-item:hover,.cdk-high-contrast-active mat-action-list .mat-list-item:focus{outline:dotted 1px}.cdk-high-contrast-active .mat-list-single-selected-option::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}.cdk-high-contrast-active [dir=rtl] .mat-list-single-selected-option::after{right:auto;left:16px}@media(hover: none){.mat-list-option:not(.mat-list-single-selected-option):not(.mat-list-item-disabled):hover,.mat-nav-list .mat-list-item:not(.mat-list-item-disabled):hover,.mat-action-list .mat-list-item:not(.mat-list-item-disabled):hover{background:none}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc3.FocusMonitor }]; }, { selectionChange: [{\n            type: Output\n        }], tabIndex: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], options: [{\n            type: ContentChildren,\n            args: [MatListOption, { descendants: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatListModule {\n}\nMatListModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatListModule });\nMatListModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatListModule_Factory(t) { return new (t || MatListModule)(); }, imports: [[MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule], MatLineModule,\n        MatCommonModule,\n        MatPseudoCheckboxModule,\n        MatDividerModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatListModule, { declarations: function () { return [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatSelectionList, MatListOption]; }, imports: function () { return [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule]; }, exports: function () { return [MatList, MatNavList, MatListItem, MatListAvatarCssMatStyler, MatLineModule,\n        MatCommonModule, MatListIconCssMatStyler, MatListSubheaderCssMatStyler, MatPseudoCheckboxModule, MatSelectionList, MatListOption, MatDividerModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatListModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatLineModule, MatRippleModule, MatCommonModule, MatPseudoCheckboxModule, CommonModule],\n                exports: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatLineModule,\n                    MatCommonModule,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatPseudoCheckboxModule,\n                    MatSelectionList,\n                    MatListOption,\n                    MatDividerModule\n                ],\n                declarations: [\n                    MatList,\n                    MatNavList,\n                    MatListItem,\n                    MatListAvatarCssMatStyler,\n                    MatListIconCssMatStyler,\n                    MatListSubheaderCssMatStyler,\n                    MatSelectionList,\n                    MatListOption\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_LIST, MAT_NAV_LIST, MAT_SELECTION_LIST_VALUE_ACCESSOR, MatList, MatListAvatarCssMatStyler, MatListIconCssMatStyler, MatListItem, MatListModule, MatListOption, MatListSubheaderCssMatStyler, MatNavList, MatSelectionList, MatSelectionListChange };\n\n//# sourceMappingURL=list.js.map","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {MatSnackBar} from '@angular/material/snack-bar';\nimport {NToX, stringsToNumbers, XToN} from '../../../constants/scale/fn';\n\n@Component({\n  selector: 'app-scale',\n  templateUrl: './scale.component.html',\n  styleUrls: ['./scale.component.less']\n})\nexport class ScaleComponent implements OnInit {\n  formData = this.fb.group({\n    number: [],\n    scale: []\n  });\n  isComputed = false;\n  result: Array<string>;\n  constructor(private fb: FormBuilder, public snackBar: MatSnackBar) { }\n\n  ngOnInit(): void {\n    this.formData.controls.number.valueChanges.subscribe(value => {\n      this.isComputed = false;\n    });\n  }\n\n  onSubmit() {\n    const num = this.formData.controls.number.value;\n    const scale = this.formData.controls.scale.value;\n    if (this.validate(num, scale)) {\n      const [transNum, transScale] = this.transfer(num, scale);\n      this.result = this.compute(transNum, transScale);\n      this.isComputed = true;\n    } else {\n      this.snackBar.open('数值与进制不匹配', 'OK', {duration: 2000});\n      this.isComputed = false;\n    }\n  }\n  validate(num: string, scale: string): boolean {\n    if (!num) {\n      return false;\n    }\n    const re2 = /[01]+/;\n    const re8 = /[0-7]+/;\n    const rex = /[0-9]+/;\n    const re0x = /[0-9abcdefABCDEF]+/;\n    let group;\n    switch (scale) {\n      case '2':\n        group = num.match(re2);\n        break;\n      case '8':\n        group = num.match(re8);\n        break;\n      case '10':\n        group = num.match(rex);\n        break;\n      case '16':\n        group = num.match(re0x);\n        break;\n      default:\n        return false;\n    }\n    return group && num === group[0];\n  }\n  transfer(num, scale): Array<number> {\n    if (num.startsWith('0')) {\n      this.transfer(num.replace('0', ''), scale);\n    }\n    return [stringsToNumbers(num.split('')), Number(scale)];\n  }\n  compute(num, scale): Array<string> {\n    console.log(num, scale);\n    let X = num;\n    if (scale !== 10) {\n      X = NToX(num, scale);\n    }\n    return XToN(X);\n  }\n}\n","<div id=\"scale\">\n  <div class=\"header\">\n    <div class=\"sub-title\">\n      <strong>进制转换</strong>\n    </div>\n  </div>\n  <div class=\"content\">\n    <form class=\"scale-form\" (ngSubmit)=\"onSubmit()\" [formGroup]=\"formData\">\n      <mat-form-field class=\"input-scale\">\n        <input matInput placeholder=\"请输入数值\" formControlName=\"number\">\n      </mat-form-field>\n      <mat-radio-group formControlName=\"scale\">\n        <mat-radio-button value=\"2\">2进制</mat-radio-button>\n        <mat-radio-button value=\"8\">8进制</mat-radio-button>\n        <mat-radio-button value=\"10\">10进制</mat-radio-button>\n        <mat-radio-button value=\"16\">16进制</mat-radio-button>\n      </mat-radio-group>\n      <button mat-button type=\"submit\">计算</button>\n    </form>\n    <mat-list role=\"list\" *ngIf=\"isComputed\">\n      <h3 mat-subheader>计算结果:</h3>\n      <mat-list-item role=\"listitem\">\n        <mat-icon mat-list-icon>done</mat-icon>\n        <h4 mat-line>2进制: {{result[0]}}</h4>\n      </mat-list-item>\n      <mat-list-item role=\"listitem\">\n        <mat-icon mat-list-icon>done</mat-icon>\n        <h4 mat-line>8进制: {{result[1]}}</h4>\n      </mat-list-item>\n      <mat-list-item role=\"listitem\">\n        <mat-icon mat-list-icon>done</mat-icon>\n        <h4 mat-line>10进制: {{result[2]}}</h4>\n      </mat-list-item>\n      <mat-list-item role=\"listitem\">\n        <mat-icon mat-list-icon>done</mat-icon>\n        <h4 mat-line>16进制: {{result[3]}}</h4>\n      </mat-list-item>\n    </mat-list>\n\n  </div>\n</div>\n\n","import { SecurityContext, ɵɵdefineInjectable, ɵɵinject, ErrorHandler, Injectable, Optional, Inject, SkipSelf, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nconst _c0 = [\"*\"];\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n    constructor(url, svgText, options) {\n        this.url = url;\n        this.svgText = svgText;\n        this.options = options;\n    }\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /** Cache for icons loaded by direct URLs. */\n        this._cachedIconsByUrl = new Map();\n        /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n        this._inProgressUrlFetches = new Map();\n        /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n        this._fontCssClassesByAlias = new Map();\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIcon(iconName, url, options) {\n        return this.addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param url\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @param namespace Namespace in which the icon should be registered.\n     * @param iconName Name under which the icon should be registered.\n     * @param literal SVG source of the icon.\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        // TODO: add an ngDevMode check\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', cleanLiteral, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @param url\n     */\n    addSvgIconSet(url, options) {\n        return this.addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return this.addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param url\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @param namespace Namespace in which to register the icon set.\n     * @param literal SVG source of the icon set.\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!cleanLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', cleanLiteral, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @param alias Alias for the font.\n     * @param className Class name override to be used instead of the alias.\n     */\n    registerFontClassAlias(alias, className = alias) {\n        this._fontCssClassesByAlias.set(alias, className);\n        return this;\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @param className\n     */\n    setDefaultFontSetClass(className) {\n        this._defaultFontSetClass = className;\n        return this;\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param safeUrl URL from which to fetch the SVG icon.\n     */\n    getSvgIconFromUrl(safeUrl) {\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(tap(svg => this._cachedIconsByUrl.set(url, svg)), map(svg => cloneSvg(svg)));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param name Name of the icon to be retrieved.\n     * @param namespace Namespace in which to look for the icon.\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        // Return (copy of) cached icon if possible.\n        const key = iconKey(namespace, name);\n        const config = this._svgIconConfigs.get(key);\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    ngOnDestroy() {\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgText) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(this._svgElementFromConfig(config)));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        const iconSetFetchRequests = iconSetConfigs\n            .filter(iconSetConfig => !iconSetConfig.svgText)\n            .map(iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((err) => {\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                this._errorHandler.handleError(new Error(errorMessage));\n                return of(null);\n            }));\n        });\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map(() => {\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            // TODO: add an ngDevMode check\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        }));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            const config = iconSetConfigs[i];\n            // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n            // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n            // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n            // some of the parsing.\n            if (config.svgText && config.svgText.indexOf(iconName) > -1) {\n                const svg = this._svgElementFromConfig(config);\n                const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchIcon(config).pipe(tap(svgText => config.svgText = svgText), map(() => this._svgElementFromConfig(config)));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the\n     * SvgIconConfig and attaches it to the config.\n     */\n    _loadSvgIconSetFromConfig(config) {\n        if (config.svgText) {\n            return of(null);\n        }\n        return this._fetchIcon(config).pipe(tap(svgText => config.svgText = svgText));\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        const iconElement = iconSource.cloneNode(true);\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes(iconElement, options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        const svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     */\n    _svgElementFromString(str) {\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        const svg = div.querySelector('svg');\n        // TODO: add an ngDevMode check\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     */\n    _toSvgElement(element) {\n        const svg = this._svgElementFromString('<svg></svg>');\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given icon. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     */\n    _fetchIcon(iconConfig) {\n        var _a;\n        const { url: safeUrl, options } = iconConfig;\n        const withCredentials = (_a = options === null || options === void 0 ? void 0 : options.withCredentials) !== null && _a !== void 0 ? _a : false;\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        // TODO: add an ngDevMode check\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        // TODO: add an ngDevMode check\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        const req = this._httpClient.get(url, { responseType: 'text', withCredentials }).pipe(finalize(() => this._inProgressUrlFetches.delete(url)), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param iconName Name under which to register the config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return this;\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @param namespace Namespace in which to register the icon config.\n     * @param config Config to be registered.\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        const configNamespace = this._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            this._iconSetConfigs.set(namespace, [config]);\n        }\n        return this;\n    }\n    /** Parses a config's text into an SVG element. */\n    _svgElementFromConfig(config) {\n        if (!config.svgElement) {\n            const svg = this._svgElementFromString(config.svgText);\n            this._setSvgAttributes(svg, config.options);\n            config.svgElement = svg;\n        }\n        return config.svgElement;\n    }\n}\nMatIconRegistry.ɵfac = function MatIconRegistry_Factory(t) { return new (t || MatIconRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient, 8), ɵngcc0.ɵɵinject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler)); };\nMatIconRegistry.ɵprov = ɵɵdefineInjectable({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(ɵɵinject(HttpClient, 8), ɵɵinject(DomSanitizer), ɵɵinject(DOCUMENT, 8), ɵɵinject(ErrorHandler)); }, token: MatIconRegistry, providedIn: \"root\" });\nMatIconRegistry.ctorParameters = () => [\n    { type: HttpClient, decorators: [{ type: Optional }] },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ErrorHandler }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.HttpClient, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DomSanitizer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ErrorHandler }]; }, null); })();\n/** @docs-private */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/** @docs-private */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        ErrorHandler,\n        [new Optional(), DOCUMENT],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg) {\n    return svg.cloneNode(true);\n}\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatIcon.\n/** @docs-private */\nclass MatIconBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatIconMixinBase = mixinColor(MatIconBase);\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY\n});\n/** @docs-private */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    const _document = inject(DOCUMENT);\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: () => _location ? (_location.pathname + _location.search) : ''\n    };\n}\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke'\n];\nconst ɵ0 = attr => `[${attr}]`;\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(ɵ0).join(', ');\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconMixinBase {\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        /** Subscription to the current in-progress SVG icon request. */\n        this._currentIconFetch = Subscription.EMPTY;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     */\n    get inline() {\n        return this._inline;\n    }\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /** Font set that the icon is a part of. */\n    get fontSet() { return this._fontSet; }\n    set fontSet(value) {\n        this._fontSet = this._cleanupFontValue(value);\n    }\n    /** Name of an icon within a font set. */\n    get fontIcon() { return this._fontIcon; }\n    set fontIcon(value) {\n        this._fontIcon = this._cleanupFontValue(value);\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return parts;\n            default: throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n        }\n    }\n    ngOnChanges(changes) {\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n        const svgIconChanges = changes['svgIcon'];\n        this._svgNamespace = null;\n        this._svgName = null;\n        if (svgIconChanges) {\n            this._currentIconFetch.unsubscribe();\n            if (this.svgIcon) {\n                const [namespace, iconName] = this._splitIconName(this.svgIcon);\n                if (namespace) {\n                    this._svgNamespace = namespace;\n                }\n                if (iconName) {\n                    this._svgName = iconName;\n                }\n                this._currentIconFetch = this._iconRegistry.getNamedSvgIcon(iconName, namespace)\n                    .pipe(take(1))\n                    .subscribe(svg => this._setSvgElement(svg), (err) => {\n                    const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                    this._errorHandler.handleError(new Error(errorMessage));\n                });\n            }\n            else if (svgIconChanges.previousValue) {\n                this._clearSvgElement();\n            }\n        }\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    ngAfterViewChecked() {\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && cachedElements.size) {\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        const styleTags = svg.querySelectorAll('style');\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        const path = this._location.getPathname();\n        this._previousPath = path;\n        this._cacheChildrenWithExternalReferences(svg);\n        this._prependPathToReferences(path);\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    _clearSvgElement() {\n        const layoutElement = this._elementRef.nativeElement;\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        const elem = this._elementRef.nativeElement;\n        const fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     */\n    _prependPathToReferences(path) {\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((attrs, element) => {\n                attrs.forEach(attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                });\n            });\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        const elements = this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map();\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach(attr => {\n                const elementWithReference = elementsWithFuncIri[i];\n                const value = elementWithReference.getAttribute(attr);\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    attributes.push({ name: attr, value: match[1] });\n                }\n            });\n        }\n    }\n}\nMatIcon.ɵfac = function MatIcon_Factory(t) { return new (t || MatIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatIconRegistry), ɵngcc0.ɵɵinjectAttribute('aria-hidden'), ɵngcc0.ɵɵdirectiveInject(MAT_ICON_LOCATION), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ErrorHandler)); };\nMatIcon.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatIcon, selectors: [[\"mat-icon\"]], hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"], hostVars: 7, hostBindings: function MatIcon_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"data-mat-icon-type\", ctx._usingFontIcon() ? \"font\" : \"svg\")(\"data-mat-icon-name\", ctx._svgName || ctx.fontIcon)(\"data-mat-icon-namespace\", ctx._svgNamespace || ctx.fontSet);\n        ɵngcc0.ɵɵclassProp(\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n    } }, inputs: { color: \"color\", inline: \"inline\", fontSet: \"fontSet\", fontIcon: \"fontIcon\", svgIcon: \"svgIcon\" }, exportAs: [\"matIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatIcon_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatIcon.ctorParameters = () => [\n    { type: ElementRef },\n    { type: MatIconRegistry },\n    { type: String, decorators: [{ type: Attribute, args: ['aria-hidden',] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_ICON_LOCATION,] }] },\n    { type: ErrorHandler }\n];\nMatIcon.propDecorators = {\n    inline: [{ type: Input }],\n    svgIcon: [{ type: Input }],\n    fontSet: [{ type: Input }],\n    fontIcon: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIcon, [{\n        type: Component,\n        args: [{\n                template: '<ng-content></ng-content>',\n                selector: 'mat-icon',\n                exportAs: 'matIcon',\n                inputs: ['color'],\n                host: {\n                    'role': 'img',\n                    'class': 'mat-icon notranslate',\n                    '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n                    '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n                    '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n                    '[class.mat-icon-inline]': 'inline',\n                    '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: MatIconRegistry }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-hidden']\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_ICON_LOCATION]\n            }] }, { type: ɵngcc0.ErrorHandler }]; }, { inline: [{\n            type: Input\n        }], fontSet: [{\n            type: Input\n        }], fontIcon: [{\n            type: Input\n        }], svgIcon: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatIconModule {\n}\nMatIconModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatIconModule });\nMatIconModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatIconModule_Factory(t) { return new (t || MatIconModule)(); }, imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatIconModule, { declarations: function () { return [MatIcon]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatIcon, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatIconModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatIcon, MatCommonModule],\n                declarations: [MatIcon]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError, ɵ0 };\n\n//# sourceMappingURL=icon.js.map","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ScaleComponent } from './scale.component';\nimport {ScaleRoutingModule} from './scale-routing.module';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatRadioModule} from \"@angular/material/radio\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {MatSnackBar, MatSnackBarModule} from \"@angular/material/snack-bar\";\nimport {MatListModule} from \"@angular/material/list\";\nimport {MatIconModule} from \"@angular/material/icon\";\n\n\n@NgModule({\n  declarations: [ScaleComponent],\n  imports: [\n    CommonModule,\n    MatInputModule,\n    ScaleRoutingModule,\n    MatRadioModule,\n    MatSnackBarModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatListModule,\n    MatIconModule,\n  ]\n})\nexport class ScaleModule { }\n","import { OverlayModule, OverlayConfig, Overlay } from '@angular/cdk/overlay';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, NgZone, ElementRef, ChangeDetectorRef, ViewChild, NgModule, Injector, TemplateRef, ɵɵdefineInjectable, ɵɵinject, INJECTOR, Injectable, Optional, SkipSelf } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { Subject } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { LiveAnnouncer } from '@angular/cdk/a11y';\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/material/button';\nimport * as ɵngcc3 from '@angular/cdk/portal';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/a11y';\nimport * as ɵngcc6 from '@angular/cdk/layout';\n\nfunction SimpleSnackBar_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function SimpleSnackBar_div_2_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.action(); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.data.action);\n} }\nfunction MatSnackBarContainer_ng_template_0_Template(rf, ctx) { }\nconst MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n */\nclass MatSnackBarConfig {\n    constructor() {\n        /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n        this.politeness = 'assertive';\n        /**\n         * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n         * component or template, the announcement message will default to the specified message.\n         */\n        this.announcementMessage = '';\n        /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n        this.duration = 0;\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** The horizontal position to place the snack bar. */\n        this.horizontalPosition = 'center';\n        /** The vertical position to place the snack bar. */\n        this.verticalPosition = 'bottom';\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nclass MatSnackBarRef {\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the snack bar has been dismissed. */\n        this._afterDismissed = new Subject();\n        /** Subject for notifying the user that the snack bar has opened and appeared. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the snack bar action was called. */\n        this._onAction = new Subject();\n        /** Whether the snack bar was dismissed using the action button. */\n        this._dismissedByAction = false;\n        this.containerInstance = containerInstance;\n        // Dismiss snackbar on action.\n        this.onAction().subscribe(() => this.dismiss());\n        containerInstance._onExit.subscribe(() => this._finishDismiss());\n    }\n    /** Dismisses the snack bar. */\n    dismiss() {\n        if (!this._afterDismissed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /** Marks the snackbar action clicked. */\n    dismissWithAction() {\n        if (!this._onAction.closed) {\n            this._dismissedByAction = true;\n            this._onAction.next();\n            this._onAction.complete();\n        }\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @deprecated Use `dismissWithAction` instead.\n     * @breaking-change 8.0.0\n     */\n    closeWithAction() {\n        this.dismissWithAction();\n    }\n    /** Dismisses the snack bar after some duration */\n    _dismissAfter(duration) {\n        // Note that we need to cap the duration to the maximum value for setTimeout, because\n        // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n        this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(duration, MAX_TIMEOUT));\n    }\n    /** Marks the snackbar as opened */\n    _open() {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    }\n    /** Cleans up the DOM after closing. */\n    _finishDismiss() {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n        this._afterDismissed.complete();\n        this._dismissedByAction = false;\n    }\n    /** Gets an observable that is notified when the snack bar is finished closing. */\n    afterDismissed() {\n        return this._afterDismissed;\n    }\n    /** Gets an observable that is notified when the snack bar has opened and appeared. */\n    afterOpened() {\n        return this.containerInstance._onEnter;\n    }\n    /** Gets an observable that is notified when the snack bar action is called. */\n    onAction() {\n        return this._onAction;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\nclass SimpleSnackBar {\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /** Performs the action on the snack bar. */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /** If the action button should be shown. */\n    get hasAction() {\n        return !!this.data.action;\n    }\n}\nSimpleSnackBar.ɵfac = function SimpleSnackBar_Factory(t) { return new (t || SimpleSnackBar)(ɵngcc0.ɵɵdirectiveInject(MatSnackBarRef), ɵngcc0.ɵɵdirectiveInject(MAT_SNACK_BAR_DATA)); };\nSimpleSnackBar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: SimpleSnackBar, selectors: [[\"simple-snack-bar\"]], hostAttrs: [1, \"mat-simple-snackbar\"], decls: 3, vars: 2, consts: [[\"class\", \"mat-simple-snackbar-action\", 4, \"ngIf\"], [1, \"mat-simple-snackbar-action\"], [\"mat-button\", \"\", 3, \"click\"]], template: function SimpleSnackBar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\");\n        ɵngcc0.ɵɵtext(1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(2, SimpleSnackBar_div_2_Template, 3, 1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate(ctx.data.message);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasAction);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc2.MatButton], styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\\n\"], encapsulation: 2, changeDetection: 0 });\nSimpleSnackBar.ctorParameters = () => [\n    { type: MatSnackBarRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DATA,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(SimpleSnackBar, [{\n        type: Component,\n        args: [{\n                selector: 'simple-snack-bar',\n                template: \"<span>{{data.message}}</span>\\n<div class=\\\"mat-simple-snackbar-action\\\"  *ngIf=\\\"hasAction\\\">\\n  <button mat-button (click)=\\\"action()\\\">{{data.action}}</button>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'mat-simple-snackbar'\n                },\n                styles: [\".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\\n\"]\n            }]\n    }], function () { return [{ type: MatSnackBarRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_SNACK_BAR_DATA]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n */\nconst matSnackBarAnimations = {\n    /** Animation that shows and hides a snack bar. */\n    snackBarState: trigger('state', [\n        state('void, hidden', style({\n            transform: 'scale(0.8)',\n            opacity: 0,\n        })),\n        state('visible', style({\n            transform: 'scale(1)',\n            opacity: 1,\n        })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n            opacity: 0\n        }))),\n    ])\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\nclass MatSnackBarContainer extends BasePortalOutlet {\n    constructor(_ngZone, _elementRef, _changeDetectorRef, \n    /** The snack bar configuration. */\n    snackBarConfig) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.snackBarConfig = snackBarConfig;\n        /** Whether the component has been destroyed. */\n        this._destroyed = false;\n        /** Subject for notifying that the snack bar has exited from view. */\n        this._onExit = new Subject();\n        /** Subject for notifying that the snack bar has finished entering the view. */\n        this._onEnter = new Subject();\n        /** The state of the snack bar animations. */\n        this._animationState = 'void';\n        /**\n         * Attaches a DOM portal to the snack bar container.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            this._assertNotAttached();\n            this._applySnackBarClasses();\n            return this._portalOutlet.attachDomPortal(portal);\n        };\n        // Based on the ARIA spec, `alert` and `status` roles have an\n        // implicit `assertive` and `polite` politeness respectively.\n        if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n            this._role = 'alert';\n        }\n        else if (snackBarConfig.politeness === 'off') {\n            this._role = null;\n        }\n        else {\n            this._role = 'status';\n        }\n    }\n    /** Attach a component portal as content to this snack bar container. */\n    attachComponentPortal(portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachComponentPortal(portal);\n    }\n    /** Attach a template portal as content to this snack bar container. */\n    attachTemplatePortal(portal) {\n        this._assertNotAttached();\n        this._applySnackBarClasses();\n        return this._portalOutlet.attachTemplatePortal(portal);\n    }\n    /** Handle end of animations, updating the state of the snackbar. */\n    onAnimationEnd(event) {\n        const { fromState, toState } = event;\n        if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n            this._completeExit();\n        }\n        if (toState === 'visible') {\n            // Note: we shouldn't use `this` inside the zone callback,\n            // because it can cause a memory leak.\n            const onEnter = this._onEnter;\n            this._ngZone.run(() => {\n                onEnter.next();\n                onEnter.complete();\n            });\n        }\n    }\n    /** Begin animation of snack bar entrance into view. */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n        }\n    }\n    /** Begin animation of the snack bar exiting from view. */\n    exit() {\n        // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n        // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n        // `MatSnackBar.open`).\n        this._animationState = 'hidden';\n        // Mark this element with an 'exit' attribute to indicate that the snackbar has\n        // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n        // test harness.\n        this._elementRef.nativeElement.setAttribute('mat-exit', '');\n        return this._onExit;\n    }\n    /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n    ngOnDestroy() {\n        this._destroyed = true;\n        this._completeExit();\n    }\n    /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     */\n    _completeExit() {\n        this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n            this._onExit.next();\n            this._onExit.complete();\n        });\n    }\n    /** Applies the various positioning and user-configured CSS classes to the snack bar. */\n    _applySnackBarClasses() {\n        const element = this._elementRef.nativeElement;\n        const panelClasses = this.snackBarConfig.panelClass;\n        if (panelClasses) {\n            if (Array.isArray(panelClasses)) {\n                // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                panelClasses.forEach(cssClass => element.classList.add(cssClass));\n            }\n            else {\n                element.classList.add(panelClasses);\n            }\n        }\n        if (this.snackBarConfig.horizontalPosition === 'center') {\n            element.classList.add('mat-snack-bar-center');\n        }\n        if (this.snackBarConfig.verticalPosition === 'top') {\n            element.classList.add('mat-snack-bar-top');\n        }\n    }\n    /** Asserts that no content is already attached to the container. */\n    _assertNotAttached() {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n    }\n}\nMatSnackBarContainer.ɵfac = function MatSnackBarContainer_Factory(t) { return new (t || MatSnackBarContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MatSnackBarConfig)); };\nMatSnackBarContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatSnackBarContainer, selectors: [[\"snack-bar-container\"]], viewQuery: function MatSnackBarContainer_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(CdkPortalOutlet, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalOutlet = _t.first);\n    } }, hostAttrs: [1, \"mat-snack-bar-container\"], hostVars: 2, hostBindings: function MatSnackBarContainer_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵsyntheticHostListener(\"@state.done\", function MatSnackBarContainer_animation_state_done_HostBindingHandler($event) { return ctx.onAnimationEnd($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx._role);\n        ɵngcc0.ɵɵsyntheticHostProperty(\"@state\", ctx._animationState);\n    } }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 0, consts: [[\"cdkPortalOutlet\", \"\"]], template: function MatSnackBarContainer_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatSnackBarContainer_ng_template_0_Template, 0, 0, \"ng-template\", 0);\n    } }, directives: [ɵngcc3.CdkPortalOutlet], styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"], encapsulation: 2, data: { animation: [matSnackBarAnimations.snackBarState] } });\nMatSnackBarContainer.ctorParameters = () => [\n    { type: NgZone },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: MatSnackBarConfig }\n];\nMatSnackBarContainer.propDecorators = {\n    _portalOutlet: [{ type: ViewChild, args: [CdkPortalOutlet, { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSnackBarContainer, [{\n        type: Component,\n        args: [{\n                selector: 'snack-bar-container',\n                template: \"<ng-template cdkPortalOutlet></ng-template>\\n\",\n                // In Ivy embedded views will be change detected from their declaration place, rather than\n                // where they were stamped out. This means that we can't have the snack bar container be OnPush,\n                // because it might cause snack bars that were opened from a template not to be out of date.\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                animations: [matSnackBarAnimations.snackBarState],\n                host: {\n                    '[attr.role]': '_role',\n                    'class': 'mat-snack-bar-container',\n                    '[@state]': '_animationState',\n                    '(@state.done)': 'onAnimationEnd($event)'\n                },\n                styles: [\".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: MatSnackBarConfig }]; }, { _portalOutlet: [{\n            type: ViewChild,\n            args: [CdkPortalOutlet, { static: true }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSnackBarModule {\n}\nMatSnackBarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatSnackBarModule });\nMatSnackBarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatSnackBarModule_Factory(t) { return new (t || MatSnackBarModule)(); }, imports: [[\n            OverlayModule,\n            PortalModule,\n            CommonModule,\n            MatButtonModule,\n            MatCommonModule,\n        ], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatSnackBarModule, { declarations: function () { return [MatSnackBarContainer, SimpleSnackBar]; }, imports: function () { return [OverlayModule,\n        PortalModule,\n        CommonModule,\n        MatButtonModule,\n        MatCommonModule]; }, exports: function () { return [MatSnackBarContainer, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSnackBarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    OverlayModule,\n                    PortalModule,\n                    CommonModule,\n                    MatButtonModule,\n                    MatCommonModule,\n                ],\n                exports: [MatSnackBarContainer, MatCommonModule],\n                declarations: [MatSnackBarContainer, SimpleSnackBar],\n                entryComponents: [MatSnackBarContainer, SimpleSnackBar]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to specify default snack bar. */\nconst MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n    providedIn: 'root',\n    factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n    return new MatSnackBarConfig();\n}\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nclass MatSnackBar {\n    constructor(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._injector = _injector;\n        this._breakpointObserver = _breakpointObserver;\n        this._parentSnackBar = _parentSnackBar;\n        this._defaultConfig = _defaultConfig;\n        /**\n         * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n         * If there is a parent snack-bar service, all operations should delegate to that parent\n         * via `_openedSnackBarRef`.\n         */\n        this._snackBarRefAtThisLevel = null;\n        /** The component that should be rendered as the snack bar's simple component. */\n        this.simpleSnackBarComponent = SimpleSnackBar;\n        /** The container component that attaches the provided template or component. */\n        this.snackBarContainerComponent = MatSnackBarContainer;\n        /** The CSS class to applie for handset mode. */\n        this.handsetCssClass = 'mat-snack-bar-handset';\n    }\n    /** Reference to the currently opened snackbar at *any* level. */\n    get _openedSnackBarRef() {\n        const parent = this._parentSnackBar;\n        return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n    }\n    set _openedSnackBarRef(value) {\n        if (this._parentSnackBar) {\n            this._parentSnackBar._openedSnackBarRef = value;\n        }\n        else {\n            this._snackBarRefAtThisLevel = value;\n        }\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param component Component to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromComponent(component, config) {\n        return this._attach(component, config);\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom template for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param template Template to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromTemplate(template, config) {\n        return this._attach(template, config);\n    }\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param message The message to show in the snackbar.\n     * @param action The label for the snackbar action.\n     * @param config Additional configuration options for the snackbar.\n     */\n    open(message, action = '', config) {\n        const _config = Object.assign(Object.assign({}, this._defaultConfig), config);\n        // Since the user doesn't have access to the component, we can\n        // override the data to pass in our own message and action.\n        _config.data = { message, action };\n        // Since the snack bar has `role=\"alert\"`, we don't\n        // want to announce the same message twice.\n        if (_config.announcementMessage === message) {\n            _config.announcementMessage = undefined;\n        }\n        return this.openFromComponent(this.simpleSnackBarComponent, _config);\n    }\n    /**\n     * Dismisses the currently-visible snack bar.\n     */\n    dismiss() {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    }\n    ngOnDestroy() {\n        // Only dismiss the snack bar at the current level on destroy.\n        if (this._snackBarRefAtThisLevel) {\n            this._snackBarRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the snack bar container component to the overlay.\n     */\n    _attachSnackBarContainer(overlayRef, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatSnackBarConfig, useValue: config }]\n        });\n        const containerPortal = new ComponentPortal(this.snackBarContainerComponent, config.viewContainerRef, injector);\n        const containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    }\n    /**\n     * Places a new component or a template as the content of the snack bar container.\n     */\n    _attach(content, userConfig) {\n        const config = Object.assign(Object.assign(Object.assign({}, new MatSnackBarConfig()), this._defaultConfig), userConfig);\n        const overlayRef = this._createOverlay(config);\n        const container = this._attachSnackBarContainer(overlayRef, config);\n        const snackBarRef = new MatSnackBarRef(container, overlayRef);\n        if (content instanceof TemplateRef) {\n            const portal = new TemplatePortal(content, null, {\n                $implicit: config.data,\n                snackBarRef\n            });\n            snackBarRef.instance = container.attachTemplatePortal(portal);\n        }\n        else {\n            const injector = this._createInjector(config, snackBarRef);\n            const portal = new ComponentPortal(content, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n            // We can't pass this via the injector, because the injector is created earlier.\n            snackBarRef.instance = contentRef.instance;\n        }\n        // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n        // appropriate. This class is applied to the overlay element because the overlay must expand to\n        // fill the width of the screen for full width snackbars.\n        this._breakpointObserver.observe(Breakpoints.HandsetPortrait).pipe(takeUntil(overlayRef.detachments())).subscribe(state => {\n            const classList = overlayRef.overlayElement.classList;\n            state.matches ? classList.add(this.handsetCssClass) : classList.remove(this.handsetCssClass);\n        });\n        this._animateSnackBar(snackBarRef, config);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    }\n    /** Animates the old snack bar out and the new one in. */\n    _animateSnackBar(snackBarRef, config) {\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe(() => {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (this._openedSnackBarRef == snackBarRef) {\n                this._openedSnackBarRef = null;\n            }\n            if (config.announcementMessage) {\n                this._live.clear();\n            }\n        });\n        if (this._openedSnackBarRef) {\n            // If a snack bar is already in view, dismiss it and enter the\n            // new snack bar after exit animation is complete.\n            this._openedSnackBarRef.afterDismissed().subscribe(() => {\n                snackBarRef.containerInstance.enter();\n            });\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            // If no snack bar is in view, enter the new snack bar.\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration && config.duration > 0) {\n            snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(config.duration));\n        }\n        if (config.announcementMessage) {\n            this._live.announce(config.announcementMessage, config.politeness);\n        }\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified snack bar config.\n     */\n    _createOverlay(config) {\n        const overlayConfig = new OverlayConfig();\n        overlayConfig.direction = config.direction;\n        let positionStrategy = this._overlay.position().global();\n        // Set horizontal position.\n        const isRtl = config.direction === 'rtl';\n        const isLeft = (config.horizontalPosition === 'left' ||\n            (config.horizontalPosition === 'start' && !isRtl) ||\n            (config.horizontalPosition === 'end' && isRtl));\n        const isRight = !isLeft && config.horizontalPosition !== 'center';\n        if (isLeft) {\n            positionStrategy.left('0');\n        }\n        else if (isRight) {\n            positionStrategy.right('0');\n        }\n        else {\n            positionStrategy.centerHorizontally();\n        }\n        // Set horizontal position.\n        if (config.verticalPosition === 'top') {\n            positionStrategy.top('0');\n        }\n        else {\n            positionStrategy.bottom('0');\n        }\n        overlayConfig.positionStrategy = positionStrategy;\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @param config Config that was used to create the snack bar.\n     * @param snackBarRef Reference to the snack bar.\n     */\n    _createInjector(config, snackBarRef) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        return Injector.create({\n            parent: userInjector || this._injector,\n            providers: [\n                { provide: MatSnackBarRef, useValue: snackBarRef },\n                { provide: MAT_SNACK_BAR_DATA, useValue: config.data }\n            ]\n        });\n    }\n}\nMatSnackBar.ɵfac = function MatSnackBar_Factory(t) { return new (t || MatSnackBar)(ɵngcc0.ɵɵinject(ɵngcc4.Overlay), ɵngcc0.ɵɵinject(ɵngcc5.LiveAnnouncer), ɵngcc0.ɵɵinject(ɵngcc0.Injector), ɵngcc0.ɵɵinject(ɵngcc6.BreakpointObserver), ɵngcc0.ɵɵinject(MatSnackBar, 12), ɵngcc0.ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); };\nMatSnackBar.ɵprov = ɵɵdefineInjectable({ factory: function MatSnackBar_Factory() { return new MatSnackBar(ɵɵinject(Overlay), ɵɵinject(LiveAnnouncer), ɵɵinject(INJECTOR), ɵɵinject(BreakpointObserver), ɵɵinject(MatSnackBar, 12), ɵɵinject(MAT_SNACK_BAR_DEFAULT_OPTIONS)); }, token: MatSnackBar, providedIn: MatSnackBarModule });\nMatSnackBar.ctorParameters = () => [\n    { type: Overlay },\n    { type: LiveAnnouncer },\n    { type: Injector },\n    { type: BreakpointObserver },\n    { type: MatSnackBar, decorators: [{ type: Optional }, { type: SkipSelf }] },\n    { type: MatSnackBarConfig, decorators: [{ type: Inject, args: [MAT_SNACK_BAR_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatSnackBar, [{\n        type: Injectable,\n        args: [{ providedIn: MatSnackBarModule }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc5.LiveAnnouncer }, { type: ɵngcc0.Injector }, { type: ɵngcc6.BreakpointObserver }, { type: MatSnackBar, decorators: [{\n                type: Optional\n            }, {\n                type: SkipSelf\n            }] }, { type: MatSnackBarConfig, decorators: [{\n                type: Inject,\n                args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, matSnackBarAnimations };\n\n//# sourceMappingURL=snack-bar.js.map","import { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Output, Input, ContentChildren, ElementRef, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Attribute, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/collections';\nimport * as ɵngcc3 from '@angular/material/core';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatRadioGroup),\n    multi: true\n};\n/** Change event object emitted by MatRadio and MatRadioGroup. */\nclass MatRadioChange {\n    constructor(\n    /** The MatRadioButton that emits the change event. */\n    source, \n    /** The value of the MatRadioButton. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = new InjectionToken('MatRadioGroup');\n/**\n * Base class with all of the `MatRadioGroup` functionality.\n * @docs-private\n */\nclass _MatRadioGroupBase {\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /** Selected value for the radio group. */\n        this._value = null;\n        /** The HTML name attribute applied to radio buttons in this group. */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /** The currently selected radio button. Should match value. */\n        this._selected = null;\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this._labelPosition = 'after';\n        /** Whether the radio group is disabled. */\n        this._disabled = false;\n        /** Whether the radio group is required. */\n        this._required = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * @docs-private\n         */\n        this.onTouched = () => { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() { return this._name; }\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() { return this._selected; }\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach(radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            });\n        }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange(this._selected, this._value));\n        }\n    }\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach(radio => radio._markForCheck());\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\n_MatRadioGroupBase.ɵfac = function _MatRadioGroupBase_Factory(t) { return new (t || _MatRadioGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatRadioGroupBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioGroupBase, inputs: { name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" } });\n_MatRadioGroupBase.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\n_MatRadioGroupBase.propDecorators = {\n    change: [{ type: Output }],\n    color: [{ type: Input }],\n    name: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatRadioGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { change: [{\n            type: Output\n        }], name: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup extends _MatRadioGroupBase {\n}\nMatRadioGroup.ɵfac = function MatRadioGroup_Factory(t) { return ɵMatRadioGroup_BaseFactory(t || MatRadioGroup); };\nMatRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatRadioGroup, selectors: [[\"mat-radio-group\"]], contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatRadioButton, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._radios = _t);\n    } }, hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"], exportAs: [\"matRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n            { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatRadioGroup.propDecorators = {\n    _radios: [{ type: ContentChildren, args: [forwardRef(() => MatRadioButton), { descendants: true },] }]\n};\nconst ɵMatRadioGroup_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(MatRadioGroup);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-radio-group',\n                exportAs: 'matRadioGroup',\n                providers: [\n                    MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n                    { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n                ],\n                host: {\n                    'role': 'radiogroup',\n                    'class': 'mat-radio-group'\n                }\n            }]\n    }], null, { _radios: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatRadioButton), { descendants: true }]\n        }] }); })();\n// Boilerplate for applying mixins to MatRadioButton.\n/** @docs-private */\nclass MatRadioButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\n// As per Material design specifications the selection control radio should use the accent color\n// palette by default. https://material.io/guidelines/components/selection-controls.html\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * Base class with all of the `MatRadioButton` functionality.\n * @docs-private\n */\nclass _MatRadioButtonBase extends _MatRadioButtonMixinBase {\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, _animationMode, _providerOverride, tabIndex) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._animationMode = _animationMode;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /** The unique ID for the radio button. */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /** Whether this radio is checked. */\n        this._checked = false;\n        /** Value assigned to this radio. */\n        this._value = null;\n        /** Unregister function for _radioDispatcher */\n        this._removeUniqueSelectionListener = () => { };\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        if (tabIndex) {\n            this.tabIndex = coerceNumberProperty(tabIndex, 0);\n        }\n        this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((id, name) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n    /** Whether this radio button is checked. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** The value of this radio button. */\n    get value() { return this._value; }\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /** Whether the radio button is disabled. */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /** Whether the radio button is required. */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Theme color of the radio button. */\n    get color() {\n        return this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            this._providerOverride && this._providerOverride.color || 'accent';\n    }\n    set color(newValue) { this._color = newValue; }\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Focuses the radio button. */\n    focus(options) {\n        this._focusMonitor.focusVia(this._inputElement, 'keyboard', options);\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /**\n     * Triggered when the radio button received a click or the input recognized any change.\n     * Clicking on a label element, will trigger a change event on the associated input.\n     */\n    _onInputChange(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n        this.checked = true;\n        this._emitChangeEvent();\n        if (this.radioGroup) {\n            this.radioGroup._controlValueAccessorChangeFn(this.value);\n            if (groupValueChanged) {\n                this.radioGroup._emitChangeEvent();\n            }\n        }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\n_MatRadioButtonBase.ɵfac = function _MatRadioButtonBase_Factory(t) { return new (t || _MatRadioButtonBase)(ɵngcc0.ɵɵdirectiveInject(_MatRadioGroupBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(String), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(String)); };\n_MatRadioButtonBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatRadioButtonBase, viewQuery: function _MatRadioButtonBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, inputs: { id: \"id\", checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { change: \"change\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatRadioButtonBase.ctorParameters = () => [\n    { type: _MatRadioGroupBase },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String },\n    { type: undefined },\n    { type: String }\n];\n_MatRadioButtonBase.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    color: [{ type: Input }],\n    change: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatRadioButtonBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatRadioGroupBase }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String }, { type: undefined }, { type: String }]; }, { id: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], checked: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonBase {\n    constructor(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex) {\n        super(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex);\n    }\n}\nMatRadioButton.ɵfac = function MatRadioButton_Factory(t) { return new (t || MatRadioButton)(ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_GROUP, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatRadioButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatRadioButton, selectors: [[\"mat-radio-button\"]], hostAttrs: [1, \"mat-radio-button\"], hostVars: 17, hostBindings: function MatRadioButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() { return ctx._inputElement.nativeElement.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", -1)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\")(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matRadioButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 13, vars: 19, consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", \"cdk-visually-hidden\", 3, \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]], template: function MatRadioButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelement(3, \"div\", 3);\n        ɵngcc0.ɵɵelement(4, \"div\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_5_listener($event) { return ctx._onInputChange($event); })(\"click\", function MatRadioButton_Template_input_click_5_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵelement(8, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"div\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"span\", 10);\n        ɵngcc0.ɵɵtext(11, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\n    } }, directives: [ɵngcc3.MatRipple], styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatRadioButton.ctorParameters = () => [\n    { type: MatRadioGroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_GROUP,] }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioButton, [{\n        type: Component,\n        args: [{\n                selector: 'mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <div class=\\\"mat-radio-container\\\">\\n    <div class=\\\"mat-radio-outer-circle\\\"></div>\\n    <div class=\\\"mat-radio-inner-circle\\\"></div>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputChange($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <div mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n\\n      <div class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></div>\\n    </div>\\n  </div>\\n\\n  <!-- The label content for radio control. -->\\n  <div class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </div>\\n</label>\\n\",\n                inputs: ['disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRadioButton',\n                host: {\n                    'class': 'mat-radio-button',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    // Needs to be -1 so the `focus` event still fires.\n                    '[attr.tabindex]': '-1',\n                    '[attr.id]': 'id',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null',\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\n                    // the focus to the native element.\n                    '(focus)': '_inputElement.nativeElement.focus()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;height:20px;left:0;position:absolute;top:0;transition:transform ease 280ms,background-color ease 280ms;width:20px;transform:scale(0.001)}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5)}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"]\n            }]\n    }], function () { return [{ type: MatRadioGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_GROUP]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatRadioModule });\nMatRadioModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatRadioModule_Factory(t) { return new (t || MatRadioModule)(); }, imports: [[MatRippleModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRadioModule, { declarations: function () { return [MatRadioGroup, MatRadioButton]; }, imports: function () { return [MatRippleModule, MatCommonModule]; }, exports: function () { return [MatRadioGroup, MatRadioButton, MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatRadioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, MatCommonModule],\n                exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                declarations: [MatRadioGroup, MatRadioButton]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule, _MatRadioButtonBase, _MatRadioGroupBase };\n\n//# sourceMappingURL=radio.js.map"]}